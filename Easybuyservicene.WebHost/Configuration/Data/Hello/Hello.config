<DataCommandsConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--store procedure begin-->
  <dataCommand name="UP_EC_GetNFProductInfo" database="WEBQuery" commandType="StoredProcedure">
    <commandText>
      <![CDATA[imk.[dbo].[UP_EC_GetNFProductInfo_V9] ]]>
    </commandText>
    <parameters>
      <param name="ItemNumber" dbType="AnsiStringFixedLength" size="25" />
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <param name="TestFlag" dbType="Boolean" />
      <param name="IsGift" dbType="Boolean" />
    </parameters>
  </dataCommand>
  <dataCommand name="UP_EC_GetNFProductInfo_ForNeweggCentral" database="WEBQuery" commandType="StoredProcedure">
    <commandText>
      <![CDATA[imk.[dbo].[UP_EC_GetNFProductInfo_ForNeweggCentral_V7] ]]>
    </commandText>
    <parameters>
      <param name="ItemNumber" dbType="AnsiStringFixedLength" size="25" />
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <param name="TestFlag" dbType="Boolean" />
      <param name="IsGift" dbType="Boolean" />
    </parameters>
  </dataCommand>

  <dataCommand name="UP_EC_GetGroupProperty" database="WEBQuery" commandType="StoredProcedure">
    <commandText>
      <![CDATA[Ecommerce2005.[dbo].[UP_EC_ProductPage_GetGroupPropertyListByItemGroupID_V5] ]]>
    </commandText>
    <parameters>
      <param name="ItemGroupID" dbType="Int32" />
    </parameters>
  </dataCommand>
  <!--store procedure end-->

  <dataCommand name="GetGroupPropertyByGroupIDs" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @TEMP_ItemHierarchy TABLE ( ParentItem varchar(20),
  ItemGroupID INT , ItemNumber varchar(20))
  
INSERT @TEMP_ItemHierarchy(ItemGroupID,ParentItem, ItemNumber)
SELECT  ii.ItemGroupID,ii.ParentItem,ii.Item
                                              FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
                                        WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
                                              and ItemGroupID in(@ItemGroupID) 
                                        GROUP BY ii.ParentItem,ii.ItemGroupID,ii.Item

select ParentItem,PropertyCode,PropertyDescription,ValueCode,ValueDescription,Priority,ValuePriority,ItemGroupID
from (
SELECT RTRIM(a2.ItemNumber) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0
        THEN CAST(FLOOR(RAND(CAST(NEWID() AS BINARY(6)))*100000000) AS INT)
        ELSE ix.Valueid    
        END AS ValueCode,  
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0   
         THEN RTRIM(ix.userinputed)  
         ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        cp.Priority,
        ISNULL(ipv.Priority,999999) AS ValuePriority,
        a2.ItemGroupID,
        rank() over(partition by a2.ItemGroupID order by pc.priority) rid,
  a2.ItemNumber
        FROM @TEMP_ItemHierarchy a2  
        INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
          ON a2.ParentItem=a1.item   
        INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
          ON cp.CatalogID = a1.PatchCount  
        INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
          ON ix.ItemNumber = a2.ParentItem  
          AND cp.PropertyID = ix.Propertyid  
    
        INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
          ON ix.PropertyID = ips.PropertyCode  
        LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
          ON ix.PropertyID = ipv.PropertyCode  
          AND ix.Valueid = ipv.ValueCode
        inner join ECommerce2005.dbo.EC_NFItemPropertiesConfig pc with(nolock) on 
SUBSTRING(ips.PropertyDescription,CHARINDEX('_',ips.PropertyDescription)+ 1, Len(ips.PropertyDescription)- CHARINDEX('_',ips.PropertyDescription)) = pc.PropertyName  
  and Status = 1
        WHERE (ix.Valueid IS NOT NULL AND ix.Valueid <> 0 OR ix.userinputed IS NOT NULL)  
               AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null) as t where t.rid = 1]]>
    </commandText>
    <parameters>
      <paramGroup name="ItemGroupID" dbType="Int32"/>
    </parameters>
  </dataCommand>

  <!--warranty & prolicy begin-->
  <dataCommand name="GetNeweggWarrantyInfo" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[SELECT
      [WarrantyID]
      ,[WarrantyName]
      ,[WarrantyType]
      ,[Status]
      ,[WarrantyTitle]
      ,[WarrantySummary]
      ,[WarrantyDetail]
      FROM Codecenter.dbo.IM_warranty WITH(NOLOCK) WHERE WarrantyId=@WarrantyId AND CountryCode=@CountryCode AND CompanyCode=@CompanyCode 
      AND IsInternational ='0']]>
    </commandText>
    <parameters>
      <param name="WarrantyId" dbType="Int32" />
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
    </parameters>
  </dataCommand>
  <dataCommand name="GetSellerRMAPolicyByID" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
                               SELECT 
                        a.WarrantySummary,
                                              a.WarrantyDetail,
                                              a.RMARefundDay, 
                                              a.RMAReplacementDay,
                                              a.SubCategoryCode,
                                              b.[Description] AS SubCategoryDescription,
            c.RMAProcessedBy,a.SellerID,c.RestockingFeeRate,s.SellerType
               FROM ECommerce2005.dbo.UV_EDI_GetSellerInfo s WITH (NOLOCK)
               INNER JOIN Codecenter.dbo.IM_Warranty a WITH(NOLOCK)
               ON s.SellerID=a.SellerID
   AND a.IsInternational ='0'
   AND s.CountryCode=a.CountryCode
               LEFT JOIN Codecenter.dbo.ItemCatalog b WITH(NOLOCK)
               ON a.SubCategoryCode = b.[Catalog]
        LEFT JOIN ecommerce2005.dbo.EDI_Seller_RMAInfo c WITH(NOLOCK)
ON c.SellerID=a.SellerID
                                 WHERE s.SellerID = @SellerID  
      AND s.CountryCode = @CountryCode
      AND s.CompanyCode = @CompanyCode
                       ]]>
    </commandText>
    <parameters>
      <param name="SellerID" dbType="AnsiStringFixedLength" size="6"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
    </parameters>
  </dataCommand>
  <!--warranty & prolicy end-->

  <!--auto add to cart begin-->
  <dataCommand name="GetItemAutoAddTransaction" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
          SELECT RTRIM(d.PrimaryItem) AS PrimaryItem,
                RTRIM(a.item) AS Item,
                ISNULL(f.CatalogId,-1) AS SubCategoryId,
                a.flag_select AS FlagSelect,
                CASE WHEN (IP.MaxQty4Promo > 0 AND IP.newegg_avail_Qty > 0) OR a.flag_select IN('1','2','3','4') 
                    THEN 1 
                    ELSE 0
                END AS StockForCombo,
                ip.Active,
                b.Checked,
                ip.UnitPrice AS UnitCost,
                ip.DiscountInstant,
                a.Model,
                f.CatalogName AS SubCategoryDescription,
                b.WebDescription,
                ip.CountryCode,
                ip.CompanyCode,
                nfat.GiftCardAmount,
                d.ViewState,
                d.CaseID,
                d.DiscountFromType,
                a.ImageName,
                c.SellerID,
                c.ShipByNewegg,
                d.StartTime,
                d.EndTime,
                ISNULL(a.InternalCount, 0) AS HasScene7Image,
                m.ImageSetImageList,
                m.ImageName AS SpecialImageList
           FROM ECommerce2005.dbo.IM_AutoAddMaster d WITH(NOLOCK)
     INNER JOIN ECommerce2005.dbo.IM_Autoaddtransaction nfat WITH(NOLOCK)
             ON d.CaseID = nfat.CaseID
     INNER JOIN imk.dbo.V_EC_AvailQtyAndPriceBase_V1 AS ip
             ON nfat.ItemNumber = ip.ItemNumber
            AND D.CompanyCode = ip.CompanyCode
            AND D.CountryCode = ip.CountryCode
     INNER JOIN abs.dbo.arinvt01 AS a WITH(NOLOCK)
             ON a.Item = nfat.ItemNumber
     INNER JOIN abs.dbo.arinvt02 AS c WITH(NOLOCK)
             ON a.item = c.item
LEFT OUTER JOIN CodeCenter.dbo.ItemDescription AS b WITH(NOLOCK)
             ON a.Item = b.ItemNumber
      LEFT JOIN Ecommerce2005.dbo.IM_Scene7ItemImage AS m WITH(NOLOCK)
             ON m.ItemNumber = a.Item and m.CompanyCode = d.CompanyCode
LEFT OUTER JOIN CodeCenter.dbo.EC_NavigationNode f WITH(NOLOCK)
             ON a.PatchCount = f.CatalogId AND f.CatalogType = 3 AND f.Status = 1
          WHERE IP.CountryCode = @CountryCode
            AND IP.CompanyCode = @CompanyCode
            AND GETDATE()>= d.StartTime
            AND GETDATE()<= d.EndTime
            AND d.Status='A'
            AND d.PrimaryItem IN ( @ItemNumber )
            AND ISNULL(d.viewstate,0) in (@ViewState)
            AND ((GiftCardMark = 1 and nfat.ItemNumber ='GC-000-001') or ( nfat.ItemNumber != 'GC-000-001'))
            ]]>
    </commandText>
    <parameters>
      <paramGroup name="ItemNumber" dbType="AnsiStringFixedLength" size="25" />
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="ViewState" dbType="AnsiStringFixedLength" size="1" />
    </parameters>
  </dataCommand>
  <!--auto add to cart end-->

  <!--home page begin-->
  <dataCommand name="GetHomapgeDealInfo" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
declare @pCompanyCode int     = @CompanyCode
declare @pCountryCode char(3) = @CountryCode
declare @pBeginTime datetime = @BeginTime
declare @pEndTime datetime = @EndTime

SELECT   r.[TranNumber],
         r.[CampaignId],
         r.[ItemNumber],
         r.[ReferenceNumber],
         r.[Priority],
         r.[ItemType],
         r.[ImageSize],
         r.[StartTime],
         r.[ExpireTime],
         r.[IsNeedLogin],
         r.[IMStatus]
FROM     (SELECT h.[TranNumber],
                h.[CampaignId],
                rtrim(h.[ItemNumber]) AS ItemNumber,
                h.ReferenceNumber,
                h.[Priority],
                h.[ItemType],
                h.[ImageSize],
                d.StartTime,
                d.ExpireTime,
                d.[IsNeedLogin],
                fl.[Status] AS [IMStatus]
         FROM   [eCommerce2005].[dbo].[EC_NFHomepage] AS h WITH(NOLOCK)
                INNER JOIN [eCommerce2005].[dbo].[EC_NFDealItems] AS d WITH(NOLOCK)
                  ON h.ReferenceNumber = d.TranNumber
                INNER JOIN [eCommerce2005].[dbo].[IM_NeweggFlash_ItemPromotion] fl WITH(NOLOCK)
                  ON fl.PCTransactionNumber=d.PromotionTransactionNumber 
                INNER JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
                  ON ia.ItemNumber=d.ItemNumber 
                  AND ia.CountryCode = d.CountryCode   
                  AND ia.CompanyCode = d.CompanyCode   
                  AND ia.DisplayStatus=1   
                  AND ia.ProcessStatus=1  
         WHERE  d.ItemType = 0
                               AND d.[Status] = 'A'
                AND fl.[Status] IN ('V','A','C')
                AND fl.ThirdPartySiteID = 2
                AND d.ExpireTime > GETDATE()
                AND d.StartTime >= @pBeginTime
                AND d.StartTime < @pEndTime
                AND d.CountryCode = @pCountryCode
                AND d.CompanyCode = @pCompanyCode
                AND h.ItemType = 1
                
         UNION ALL
         SELECT h1.[TranNumber],
                h1.[CampaignId],
                h1.[ItemNumber],
                h1.ReferenceNumber,
                h1.[Priority],
                h1.[ItemType],
                h1.[ImageSize],
                c.StartTime,
                c.ExpireTime,
                c.[IsNeedLogin],
                'A' AS [IMStatus]
         FROM   [eCommerce2005].[dbo].[EC_NFHomepage] AS h1 WITH(NOLOCK)
                INNER JOIN [eCommerce2005].[dbo].[EC_NFCampaign] AS c WITH(NOLOCK)
                  ON h1.[CampaignID] = c.[CampaignID] 
         WHERE  c.[Status] = 'A'
                AND c.[ExpireTime] > GETDATE()
                AND c.StartTime >= @pBeginTime
                AND c.StartTime < @pEndTime
                AND c.CountryCode = @pCountryCode
                AND c.CompanyCode = @pCompanyCode
                AND h1.ItemType = 0) AS r
ORDER BY r.[ImageSize] DESC,
         r.[StartTime] DESC,
         r.[Priority] DESC
    ]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <param name="BeginTime" dbType="DateTime"/>
      <param name="EndTime" dbType="DateTime"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetEndingSoonDealInfo" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
SELECT   r.[TranNumber],
         r.[CampaignId],
         r.[ItemNumber],
         r.[ReferenceNumber],
         r.[Priority],
         r.[ItemType],
         r.[ImageSize],
         r.[StartTime],
         r.[ExpireTime],
         r.[IsNeedLogin]
FROM     (SELECT h.[TranNumber],
                h.[CampaignId],
                rtrim(h.[ItemNumber]) AS ItemNumber,
                h.ReferenceNumber,
                h.[Priority],
                h.[ItemType],
                h.[ImageSize],
                d.StartTime,
                d.ExpireTime,
                d.[IsNeedLogin]
         FROM   [eCommerce2005].[dbo].[EC_NFHomepage] AS h WITH(NOLOCK)
                INNER JOIN [eCommerce2005].[dbo].[EC_NFDealItems] AS d WITH(NOLOCK)
                  ON h.ReferenceNumber = d.TranNumber
                INNER JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
                  ON ia.ItemNumber=d.ItemNumber 
                  AND ia.CountryCode = d.CountryCode   
                  AND ia.CompanyCode = d.CompanyCode   
                  AND ia.DisplayStatus=1   
                  AND ia.ProcessStatus=1                    
         WHERE  d.ItemType = 0
                AND d.ExpireTime > GETDATE()
                AND d.ExpireTime <@EndTime
                AND d.StartTime <@BeginTime
                AND d.Status = 'A'
                AND d.CountryCode = @CountryCode
                AND d.CompanyCode = @CompanyCode
                AND h.ItemType = 1
                AND  EXISTS (SELECT TOP 1 1
                             FROM   [eCommerce2005].[dbo].[IM_NeweggFlash_ItemPromotion] fl WITH(NOLOCK)
                             WHERE  fl.PCTransactionNumber=d.PromotionTransactionNumber
                                    AND fl.[Status] = 'A'
                                    AND fl.ThirdPartySiteID = 2)
         UNION ALL
         SELECT h1.[TranNumber],
                h1.[CampaignId],
                h1.[ItemNumber],
                h1.ReferenceNumber,
                h1.[Priority],
                h1.[ItemType],
                h1.[ImageSize],
                c.StartTime,
                c.ExpireTime,
                c.[IsNeedLogin]
         FROM   [eCommerce2005].[dbo].[EC_NFHomepage] AS h1 WITH(NOLOCK)
                INNER JOIN [eCommerce2005].[dbo].[EC_NFCampaign] AS c WITH(NOLOCK)
                  ON h1.[CampaignID] = c.[CampaignID]                 
         WHERE  c.[Status] = 'A'
                AND c.[ExpireTime] > GETDATE()
                AND c.ExpireTime <@EndTime
                AND c.StartTime <@BeginTime
                AND c.CountryCode = @CountryCode
                AND c.CompanyCode = @CompanyCode
                AND h1.ItemType = 0) AS r
ORDER BY r.[ImageSize] DESC,
         r.[StartTime] DESC,
         r.[Priority]
    ]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <param name="BeginTime" dbType="DateTime"/>
      <param name="EndTime" dbType="DateTime"/>
    </parameters>
  </dataCommand>
  <!--home page end-->

  <!--item base begin-->
  <dataCommand name="GetItemBaseInfoByTranNumber" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[ 
declare @pCountryCode char(3) = @CountryCode
declare @pCompanyCode int =@CompanyCode
      Select 
            ni.[TranNumber]
           ,ni.[Item] AS ItemNumber
           ,ni.[ParentItem]
           ,ISNULL(ni.[ItemGroupID],0) AS ItemGroupID
           ,ni.[SellerID]
           ,ni.[DiscountMark]
           ,ni.[CountryCode]
           ,ni.[CompanyCode]
           ,ni.[UnitPrice]
           ,ni.[DiscountInstant]
           ,ni.[FedExShippingCharge]
           ,ni.[LimitQuantity]
           ,ni.[AvailQty]
           ,ni.[SpecialImage]
           ,ni.[WaterMarkFlag]
           ,ni.[ShowOEMRetail]
           ,ni.[OEMMark]
           ,ni.[HasScene7Image]
           ,ni.[ImageName]
           ,ni.[Description]
           ,ni.[WebDescription]
           ,ni.[SpecialImageList]
           ,ni.[ThumbnailSetName]
           ,ni.[ImageSetName]
           ,ni.[SpinSetName]
           ,ni.[ThumbnailSetImageList]
           ,ni.[ImageSetImageList]
           ,ni.[SpinSetImageList]
           ,ni.[VendorSetImageList]
           ,ni.[ParentImageName]
           ,ni.[ParentWaterMarkFlag]
           ,ni.[ParentHasScene7Image]
           ,ni.[ParentSpecialImageList]
           ,ni.[ParentThumbnailSetName]
           ,ni.[ParentImageSetName]
           ,ni.[ParentSpinSetName]
           ,ni.[ParentThumbnailSetImageList]
           ,ni.[ParentImageSetImageList]
           ,ni.[ParentSpinSetImageList]
           ,ni.[ParentVendorSetImageList]
           ,ni.[StartTime]
           ,ni.[ExpireTime]
           ,ni.CampaignId
           ,nc.CampaignName
           ,ni.[Priority]
           ,ni.[WarrantyId]
           ,Case WHEN Active=1 AND ni.Checked='1' THEN 1 ELSE 0 END AS Active
           ,WebsiteBlockMark
           ,ni.SubcategoryName
           ,ni.itemCatalog AS ItemCatalog
           ,ni.IsRefurbished
           ,ni.IsOpenBox
           ,ni.IsNeedLogin
           ,CASE WHEN d.PrimaryItem IS NULL THEN 0 ELSE 1 END AS AutoAddItemType
      FROM imk.[dbo].[V_EC_NFItemsBase_V5] ni WITH(NOLOCK)
LEFT JOIN ECommerce2005.dbo.IM_AutoAddMaster d WITH(NOLOCK)
        ON d.PrimaryItem = ni.Item
       AND GETDATE() BETWEEN ni.StartTime  AND  ni.ExpireTime
       AND GETDATE() BETWEEN d.StartTime  AND  d.EndTime
       AND d.CompanyCode=ni.CompanyCode
       AND d.CountryCode=ni.CountryCode
       AND d.Status='A'
LEFT JOIN ECommerce2005.[dbo].[EC_NFCampaign] nc WITH(NOLOCK)
       ON ni.CampaignId=nc.CampaignId  
       AND nc.Status='A'
     WHERE ni.TranNumber in (@TranNumberList)
       AND ni.CountryCode=@pCountryCode AND ni.CompanyCode = @pCompanyCode
       AND ni.BlockByAdditionalInfo = 0]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="TranNumberList" dbType="Int32"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetItemBaseInfoByItemNumberWithInactiveCampaign" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[SELECT * FROM (
  SELECT a.ItemNumber AS ItemNumber
          ,ISNULL(a.CatalogName, '') AS SubcategoryName
          ,a.SellerID
          ,ip.UnitPrice
          ,ip.DiscountInstant
          ,ip.WarrantyId
          ,ia.SpecialImage
          ,OEMMark =(CASE WHEN b.OEMMark = '1' THEN 1 ELSE 0 END)
          ,ISNULL(b.InternalCount, 0) AS HasScene7Image
          ,b.ImageName
          ,b.NewProductMark AS IsRefurbished
          ,b.OpenBoxMark AS IsOpenBox
          ,a.LineDescription AS [Description]
          ,b.SpecialImageList
          ,b.ImageSetName
          ,b.ImageSetImageList
          ,ni.StartTime
          ,ni.ExpireTime
          ,nc.CampaignName
          ,Case WHEN ip.Active=1 AND a.Checked='1' THEN 1 ELSE 0 END AS Active
          ,rn=ROW_NUMBER() over(PARTITION BY a.ItemNumber ORDER BY ABS(DATEDIFF(mi,DATEADD(mi,DATEDIFF(mi,ni.StartTime,ni.ExpireTime)/2,ni.StartTime),GETDATE())))
    FROM Ecommerce2005.dbo.EC_NFDealItems AS ni WITH(NOLOCK)   
INNER JOIN imk.dbo.V_EC_AvailQtyAndPriceBaseForFlash_V4 AS ip WITH(NOLOCK)   
      ON ni.TranNumber = ip.DealTranNumber    
INNER JOIN Ecommerce2005.dbo.EC_NFSwitchDetails AS a WITH(NOLOCK)   
        ON a.ItemNumber= ni.ItemNumber   
               and a.CompanyCode = ni.CompanyCode
               and a.CountryCode = ni.CountryCode
INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal AS b WITH(NOLOCK)   
        ON b.ItemNumber= ni.ItemNumber      
               and b.CompanyCode = ni.CompanyCode
               and b.CountryCode = ni.CountryCode
LEFT JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
    ON ia.ItemNumber=ni.ItemNumber 
    AND ia.CountryCode = ni.CountryCode   
    AND ia.CompanyCode = ni.CompanyCode 
    AND ia.DisplayStatus = 1 
          AND ia.ProcessStatus =1
LEFT JOIN ECommerce2005.dbo.EC_NFCampaign AS nc WITH(NOLOCK)  
      ON  nc.CampaignID = ni.CampaignID   
    WHERE a.ItemNumber IN(@ItemList) AND ip.CountryCode=@CountryCode AND ip.CompanyCode = @CompanyCode
                       AND ip.IMStatus IN('V','A','C') 
      AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))
) S WHERE s.rn = 1]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="ItemList" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetItemBaseInfoByItemNumberForAutoAddGiftReturnPolicy" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
    SELECT TOP 1 a.ItemNumber AS ItemNumber
           ,ISNULL(a.CatalogName, '') AS SubcategoryName
           ,a.SellerID
           ,ip.UnitPrice
           ,ip.DiscountInstant
           ,ip.WarrantyId
           ,ia.SpecialImage
           ,OEMMark =(CASE WHEN b.OEMMark = '1' THEN 1 ELSE 0 END)
           ,ISNULL(b.InternalCount, 0) AS HasScene7Image
           ,b.ImageName
           ,b.NewProductMark AS IsRefurbished
           ,b.OpenBoxMark AS IsOpenBox
           ,a.LineDescription AS [Description]
           ,b.SpecialImageList
           ,b.ImageSetName
           ,b.ImageSetImageList
           ,NULL StartTime
           ,NULL ExpireTime
           ,NULL CampaignName
           ,Case WHEN ip.Active=1 AND a.Checked='1' THEN 1 ELSE 0 END AS Active
               FROM imk.dbo.V_EC_AvailQtyAndPriceBase_V1 AS ip WITH(NOLOCK)   
INNER JOIN [ECommerce2005].[dbo].[EC_NFSwitchDetails] a WITH(NOLOCK)   
                ON a.ItemNumber = ip.ItemNumber   
                       and ip.CountryCode = a.CountryCode
                       and ip.CompanyCode = a.CompanyCode
INNER JOIN [ECommerce2005].[dbo].[EC_NFSwitchNormal] b WITH(NOLOCK)   
                ON b.ItemNumber = ip.ItemNumber  
                       and ip.CountryCode = b.CountryCode
                       and ip.CompanyCode = b.CompanyCode
LEFT JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
        ON ia.ItemNumber=ip.ItemNumber   
       AND ia.CountryCode = ip.CountryCode
       AND ia.CompanyCode = ip.CompanyCode
       AND ia.DisplayStatus=1
       AND ia.ProcessStatus=1
     WHERE a.ItemNumber IN(@ItemList) AND ip.CountryCode=@CountryCode AND ip.CompanyCode = @CompanyCode]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="ItemList" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetItemBaseInfoByItemNumber" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[ SELECT * FROM (SELECT 
                                              ni.[TranNumber]
                                        ,ni.[Item] AS ItemNumber
                                        ,ni.[ParentItem]
                                        ,ni.[ItemGroupID]
                                        ,ni.[SellerID]
                                        ,ni.[DiscountMark]
                                        ,ni.[CountryCode]
                                        ,ni.[CompanyCode]
                                        ,ni.[UnitPrice]
                                        ,ni.[DiscountInstant]
                                        ,ni.[FedExShippingCharge]
                                        ,ni.[LimitQuantity]
                                        ,ni.[AvailQty]
                                        ,ni.[SpecialImage]
                                        ,ni.[WaterMarkFlag]
                                        ,ni.[ShowOEMRetail]
                                        ,ni.[OEMMark]
                                        ,ni.[HasScene7Image]
                                        ,ni.[ImageName]
                                        ,ni.[Description]
                                        ,ni.[WebDescription]
                                        ,ni.[SpecialImageList]
                                        ,ni.[ThumbnailSetName]
                                        ,ni.[ImageSetName]
                                        ,ni.[SpinSetName]
                                        ,ni.[ThumbnailSetImageList]
                                        ,ni.[ImageSetImageList]
                                        ,ni.[SpinSetImageList]
                                        ,ni.[VendorSetImageList]
                                        ,ni.[ParentImageName]
                                        ,ni.[ParentWaterMarkFlag]
                                        ,ni.[ParentHasScene7Image]
                                        ,ni.[ParentSpecialImageList]
                                        ,ni.[ParentThumbnailSetName]
                                        ,ni.[ParentImageSetName]
                                        ,ni.[ParentSpinSetName]
                                        ,ni.[ParentThumbnailSetImageList]
                                        ,ni.[ParentImageSetImageList]
                                        ,ni.[ParentSpinSetImageList]
                                        ,ni.[ParentVendorSetImageList]
                                        ,ni.[StartTime]
                                        ,ni.[ExpireTime]
                                        ,ni.CampaignId
                                        ,nc.CampaignName
                                        ,ni.[Priority]
                                        ,ni.[WarrantyId]
                                        ,Case WHEN ni.Active=1 AND ni.Checked='1' THEN 1 ELSE 0 END AS Active
                                        ,ni.WebsiteBlockMark
                                        ,ni.SubcategoryName
                                        ,rn=row_number() over(partition by ni.Item Order by ABS(DateDiff(mi,DateAdd(mi,DateDiff(mi,ni.StartTime,ni.ExpireTime)/2,ni.StartTime),GETDATE())))
                                        ,ni.IsRefurbished
            ,ni.IsOpenBox
                               FROM imk.[dbo].[V_EC_NFItemsBase_V5] ni WITH(NOLOCK)
                LEFT JOIN ECommerce2005.[dbo].[EC_NFCampaign] nc WITH(NOLOCK)
                       ON ni.CampaignId=nc.CampaignId 
                      AND nc.Status='A'
        WHERE  ni.Item in (@ItemList)
        AND ni.CountryCode=@CountryCode AND ni.CompanyCode = @CompanyCode
        AND ni.BlockByAdditionalInfo = 0
      ) S      WHERE S.rn=1]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="ItemList" dbType="AnsiStringFixedLength"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetMinicartItemInfosByItemNumber" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[ 
     SELECT 
      ItemNumber, 
            UnitPrice,
      DiscountInstant,
      StartTime,
            ExpireTime,
            ImageName,
      IsOpenBox,
            Description FROM 
(
    SELECT     
        RANK() over(PARTITION  by eni.ItemNumber order by eni.ExpireTime desc) as rankid,
              eni.ItemNumber, 
              ip.PromotionUnitPrice AS UnitPrice, 
        ip.PromotionInstantRebate AS DiscountInstant,
        eni.StartTime,
              eni.ExpireTime,
              a.ImageName,
        a.OpenBoxMark AS IsOpenBox,
              b.LineDescription AS [Description]
    From ECommerce2005.dbo.EC_NFDealItems eni WITH(NOLOCK)
    INNER JOIN eCommerce2005.dbo.IM_NeweggFlash_ItemPromotion ip WITH(NOLOCK)
               ON ip.PCTransactionNumber=eni.PromotionTransactionNumber  
    INNER JOIN ECommerce2005.dbo.EC_NFSwitchNormal AS a WITH(NOLOCK)  
        ON a.ItemNumber=eni.ItemNumber  
            AND ip.CompanyCode = a.CompanyCode 
            AND ip.CountryCode = a.CountryCode
    INNER JOIN ECommerce2005.dbo.EC_NFSwitchDetails AS b WITH(NOLOCK)  
        ON b.ItemNumber=eni.ItemNumber  
            AND ip.CompanyCode = b.CompanyCode 
            AND ip.CountryCode = b.CountryCode
    where eni.CompanyCode=@CompanyCode
            AND eni.CountryCode=@CountryCode
               AND eni.ItemNumber in (@itemNumbers)
               AND  eni.[Status] = 'A'
            AND ip.ThirdPartySiteID = 2 
            AND ip.[Status] in ( 'A','C') 
)ranked where ranked.rankid = 1
      ]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="ItemNumbers" dbType="AnsiStringFixedLength" size="25" />
    </parameters>
  </dataCommand>
  <!--item base end-->

  <!--database maintain begin-->
  <dataCommand name="GetDatabaseMaintenance" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
                       Select TOP 1 ecommerce2005.dbo.EC_DatabaseMaintenance(GETDATE()) AS Status                 
                       ]]>
    </commandText>
  </dataCommand>
  <!--database maintain end-->

  <!--campaign begin-->
  <dataCommand name="UP_EC_GetNFCampaignItems_Paging" database="WEBQuery" commandType="StoredProcedure">
    <commandText>
      <![CDATA[imk.[dbo].[UP_EC_GetNFCampaignItems_Paging_V10] ]]>
    </commandText>
    <parameters>
      <param name="CampaignID" dbType="Int32" />
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <param name="PageIndex" dbType="Int32" />
      <param name="PageSize" dbType="Int32" />
      <param name="Sort" dbType="Int32" />
      <param name="ItemCatalog" dbType="Int32" />
      <param name="TestFlag" dbType="Boolean" />
    </parameters>
  </dataCommand>
  <dataCommand name="UP_EC_GetNFCampaignItems_Count" database="WEBQuery" commandType="StoredProcedure">
    <commandText>
      <![CDATA[imk.[dbo].[UP_EC_GetNFCampaignItems_Count_V3] ]]>
    </commandText>
    <parameters>
      <param name="CampaignID" dbType="Int32" />
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <param name="ItemCatalog" dbType="Int32" />
    </parameters>
  </dataCommand>
  <dataCommand name="UP_EC_GetNFCampaignItems_SubCategory" database="WEBQuery" commandType="StoredProcedure">
    <commandText>
      <![CDATA[imk.[dbo].[UP_EC_GetNFCampaignItems_SubCategory_V2] ]]>
    </commandText>
    <parameters>
      <param name="CampaignID" dbType="Int32" />
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
    </parameters>
  </dataCommand>
  <dataCommand name="GetCampaignInfo" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[Select a.CampaignId,
                                      a.CampaignName,
                                      a.StartTime,
                                      a.ExpireTime,
                                      a.CampaignDescription,
                                      a.ImageName,
                    a.CampaignType,
                    a.IsNeedLogin
                                      from eCommerce2005.dbo.EC_NFCampaign AS a WITH(NOLOCK)
Where a.Status='A' And a.CampaignID in (@CampaignList) AND a.CountryCode=@CountryCode AND a.CompanyCode = @CompanyCode]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="CampaignList" dbType="Int32"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetAllCampaignCountByStoreID" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
      declare @pStoreId int = @StoreId
      DECLARE @pCountryCode char(3) = @CountryCode
      DECLARE @pCompanyCode int     = @CompanyCode
      
       SELECT TOP 1 COUNT(1) AS TotalCount
       FROM   [eCommerce2005].[dbo].[EC_NFCampaign] AS c WITH(NOLOCK)
       WHERE  c.[Status] = 'A'
              AND c.[ExpireTime] > GETDATE()
              AND c.StartTime < GETDATE()
              AND c.CountryCode = @pCountrycode
              AND c.CompanyCode = @pCompanyCode
                     AND EXISTS (
                             SELECT TOP 1 1 FROM [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK)
                                                    INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
                                                    ON nsm.ItemCatalog = nfi.itemCatalog
                                                             and nfi.CompanyCode = nsm.CompanyCode
                                                             and nfi.CountryCode = nsm.CountryCode
                             WHERE nfi.CampaignId = c.CampaignID
                             AND nfi.IMStatus = 'A'
                             AND (@pStoreId IS NULL OR @pStoreId=0 OR nsm.NFStoreID = @pStoreId)
                             AND nfi.StartTime < GETDATE()
                             AND nfi.ExpireTime > GETDATE())
      ]]>
    </commandText>
    <parameters>
      <param name="StoreId" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetGetAllCampaignByStoreID" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @pPageSize int = @PageSize
      DECLARE @pPageIndex int = @PageIndex
      Declare @pStoreId int= @StoreId
      DECLARE @pSortby int = @Sortby
      DECLARE @pCountryCode char(3) = @CountryCode
      DECLARE @pCompanyCode int     = @CompanyCode
      
SELECT TOP(@pPageSize) R.CampaignId,
        R.CampaignName,
                   R.CampaignDescription,
                   R.ImageName,
                   R.CampaignType,
                   R.StartTime,
                   R.ExpireTime,
                   R.[IsNeedLogin]
FROM
(
         SELECT c.CampaignId,
                c.CampaignName,
                               c.CampaignDescription,
                               c.ImageName,
                               c.CampaignType,
                c.StartTime,
                c.ExpireTime,
                c.[IsNeedLogin],
ROW_NUMBER() OVER(ORDER BY c.[StartTime] DESC, c.CampaignID) AS RowNumber
         FROM   [eCommerce2005].[dbo].[EC_NFCampaign] AS c WITH(NOLOCK)
         WHERE  c.[Status] = 'A'
                AND c.[ExpireTime] > GETDATE()
                AND c.StartTime < GETDATE()
                AND c.CountryCode = @pCountrycode
                AND c.CompanyCode = @pCompanyCode
                               AND EXISTS (
                                      SELECT TOP 1 1 FROM [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK)
                                                             INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
                                                             ON nsm.ItemCatalog = nfi.itemCatalog
                                                             and nfi.CountryCode = nsm.CountryCode
                                                             and nfi.CompanyCode = nsm.CompanyCode
                                      WHERE nfi.CampaignId = c.CampaignID
                                      AND nfi.IMStatus = 'A'
                                      AND nfi.StartTime < GETDATE()
                                      AND nfi.ExpireTime > GETDATE()
                                      AND (@pStoreId IS NULL OR @pStoreId=0 OR nsm.NFStoreID = @pStoreId))
)R
WHERE  R.RowNumber>(@pPageIndex-1)*@pPageSize
ORDER BY RowNumber     
      ]]>
    </commandText>
    <parameters>
      <param name="PageIndex" dbType="Int32"/>
      <param name="PageSize" dbType="Int32"/>
      <param name="Sortby" dbType="Int32"/>
      <param name="StoreId" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <!--campaign end-->

  <!--featured deals begin-->
  <dataCommand name="GetFeaturedDealsCount" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[      DECLARE @ItemCatalog int = @in_ItemCatalog
      DECLARE @pCountryCode char(3) = @CountryCode
     DECLARE @pCompanyCode int     = @CompanyCode

--  start
DECLARE @TEMP_TABLE TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TranNumber      INT NOT NULL,
    ItemGroupID     INT,
    RowNumber       INT,
    Qty             INT,
    ParentItem      VARCHAR(20),
    ItemNumber      VARCHAR(20)
)
  
INSERT INTO @TEMP_TABLE(TranNumber,ItemGroupID,RowNumber,Qty,ParentItem,ItemNumber)
SELECT ni.TranNumber,
         c.ItemGroupID,
               0,
               imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
               c.ParentItem,
     ni.ItemNumber
    FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN [imk].[dbo].[V_EC_NFFeaturedDeals_V5] nfd WITH(NOLOCK)  
      ON nfd.DealItemsTransactionNumber = ni.TranNumber
               AND ni.[StartTime]<GETDATE() AND ni.[ExpireTime]>GETDATE()
INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
      ON ni.ItemNumber=c.ItemNumber
               and c.CountryCode = ni.CountryCode
               and c.CompanyCode = ni.CompanyCode
LEFT JOIN ECommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK) 
              ON ia.ItemNumber = ni.ItemNumber 
              AND ia.CountryCode = ni.CountryCode 
              AND ia.CompanyCode = ni.CompanyCode 
              AND ia.DisplayStatus = 1 
                    AND ia.ProcessStatus =1
left JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
           ON ni.ItemNumber = ir.ItemNumber
                 and ir.CountryCode = ni.CountryCode
                 and ir.CompanyCode = ni.CompanyCode
                 AND ir.ThirdpartyCode ='FLS' AND ir.Status=1
left JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
               ON ni.ItemNumber = ii.ItemNumber  
               and ii.CountryCode = ni.CountryCode 
  WHERE ni.CountryCode=@pCountrycode AND ni.CompanyCode= @pCompanyCode
    AND ni.DisplayMark=1 AND ni.Status='A' AND c.itemgroupid <> 0 AND nfd.[Status]='A'
    AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))

DECLARE @TEMP_ItemHierarchy TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem      VARCHAR(20),
    ItemGroupID     INT,
    ItemNumber      VARCHAR(20)
)

INSERT INTO @TEMP_ItemHierarchy(ItemGroupID, ParentItem, ItemNumber)
SELECT ii.ItemGroupID, ii.ParentItem, ii.Item
FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
    AND ItemGroupID in(SELECT DISTINCT ItemGroupID FROM @TEMP_TABLE) 
    AND Item in (SELECT DISTINCT ItemNumber FROM @TEMP_TABLE)
GROUP BY ii.ParentItem, ii.ItemGroupID, ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM @TEMP_TABLE c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @pCompanyCode AND pc.CountryCode = @pCountryCode
WHERE pc.Status = 1

DELETE @TEMP_TABLE
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM @TEMP_TABLE
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO @TEMP_TABLE (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE @TEMP_TABLE WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        *
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO @TEMP_TABLE (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1 

---- end

SELECT COUNT(DISTINCT(itemCatalog)) AS TotalSubCategory,COUNT(*) AS TotalCount
  FROM [imk].[dbo].[V_EC_NFFeaturedDeals_V5] nfd WITH(NOLOCK)  
  JOIN [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK)   
  ON nfd.DealItemsTransactionNumber=nfi.TranNumber 
    LEFT JOIN ECommerce2005.dbo.EC_NFCampaign AS nc WITH(NOLOCK)  
    ON nc.CampaignID = nfi.CampaignID   
  WHERE nfi.[StartTime]<GETDATE() AND nfi.[ExpireTime]>GETDATE()
  AND nfi.[DisplayMark]=1 AND nfi.[Active]=1
  AND nfd.[Status]='A'
  AND (@ItemCatalog IS NULL OR @ItemCatalog=0 OR itemCatalog=@ItemCatalog)
  AND nfi.IMStatus = 'A'
  AND nfi.BlockByAdditionalInfo = 0
  AND (nc.[Status]='A' OR nc.[Status] IS NULL)
   AND nfi.[TranNumber] IN 
           (
                 SELECT TranNumber 
                   FROM @TEMP_TABLE g
                  WHERE g.RowNumber = 1
              UNION ALL
                 SELECT TranNumber
                   FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
             INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
                     ON ni.ItemNumber=c.ItemNumber
                                              and ni.CountryCode = c.CountryCode
                                              and ni.CompanyCode = c.CompanyCode
                  WHERE ni.CountryCode=@pCountrycode
                    AND ni.CompanyCode=@pCompanyCode
                    AND (c.itemgroupid=0 OR c.itemgroupid IS NULL)
                    )  ]]>
    </commandText>
    <parameters>
      <param name="in_ItemCatalog" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetFeaturedDeals" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @pPageSize int = @PageSize
      DECLARE @pPageIndex int = @PageIndex
      Declare @pCATEGORY int= @Category
      DECLARE @pSortby int = @Sortby
      DECLARE @pCountryCode char(3) = @CountryCode
DECLARE @pCompanyCode int     = @CompanyCode

--START
DECLARE @TEMP_TABLE TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TranNumber      INT NOT NULL,
    ItemGroupID     INT,
    RowNumber       INT,
    Qty             INT,
    ParentItem      VARCHAR(20),
    ItemNumber      VARCHAR(20)
)
  
INSERT INTO @TEMP_TABLE(TranNumber,ItemGroupID,RowNumber,Qty,ParentItem, ItemNumber)
SELECT   ni.TranNumber,
         c.ItemGroupID,
               0,
               imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
               c.ParentItem,
               ni.ItemNumber
    FROM     Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN [imk].[dbo].[V_EC_NFFeaturedDeals_V5] nfd WITH(NOLOCK)  
      ON nfd.DealItemsTransactionNumber = ni.TranNumber
INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
       ON ni.ItemNumber = c.ItemNumber
                       and ni.CountryCode = c.CountryCode
                       and ni.CompanyCode = c.CompanyCode
LEFT JOIN ECommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK) 
              ON ia.ItemNumber = ni.ItemNumber 
              AND ia.CountryCode = ni.CountryCode 
              AND ia.CompanyCode = ni.CompanyCode 
              AND ia.DisplayStatus = 1 
                    AND ia.ProcessStatus =1
LEFT JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
           ON ni.ItemNumber = ir.ItemNumber
                 AND ir.CountryCode = ni.CountryCode
                 AND ir.CompanyCode = ni.CompanyCode
                 AND ir.ThirdpartyCode ='FLS' AND ir.Status=1
LEFT JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
               ON ni.ItemNumber = ii.ItemNumber  
               AND ii.CountryCode = ni.CountryCode 
  WHERE    ni.CountryCode = @pCountrycode 
           AND ni.CompanyCode = @pCompanyCode
               AND ni.[StartTime] < GETDATE()
               AND ni.[ExpireTime] > GETDATE()
               AND nfd.[Status] = 'A'
         AND ni.DisplayMark = 1
         AND ni.Status = 'A'
    AND c.itemgroupid <> 0 
    AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))


DECLARE @TEMP_ItemHierarchy TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem      VARCHAR(20),
    ItemGroupID     INT,
    ItemNumber      VARCHAR(20)
)

INSERT INTO @TEMP_ItemHierarchy(ItemGroupID, ParentItem, ItemNumber)
SELECT ii.ItemGroupID, ii.ParentItem, ii.Item
FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
    AND ItemGroupID in(SELECT DISTINCT ItemGroupID FROM @TEMP_TABLE) 
    AND Item in (SELECT DISTINCT ItemNumber FROM @TEMP_TABLE)
GROUP BY ii.ParentItem, ii.ItemGroupID, ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM @TEMP_TABLE c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @pCompanyCode AND pc.CountryCode = @pCountryCode
WHERE pc.Status = 1

DELETE @TEMP_TABLE
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM @TEMP_TABLE
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO @TEMP_TABLE (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE @TEMP_TABLE WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        *
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO @TEMP_TABLE (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1

---- end
;WITH CTE_FeaturedDeals AS(
        SELECT nfi.[Item] AS [ItemNumber],
                 nfi.[UnitPrice],
                 nfi.[DiscountInstant],
                 nfi.[DiscountMark],
                 nfi.[IsRefurbished],
                 nfi.[IsOpenBox],
                 nfi.[AvailQty],
                 nfi.[SpecialImage],
                 nfi.[HasScene7Image],
                 nfi.[ImageSetImageList],
                 nfi.[ImageName],
                 nfi.[SpecialImageList],
                 nfi.[Description],
                 nfi.[WebDescription],
                 nfi.[StartTime],
                 nfi.[ExpireTime],
                 nfi.[ItemCatalog],
                 nfi.[SubcategoryName],
                 CASE 
                 WHEN nfi.Active = 1
                      AND nfi.Checked = '1' THEN 1
                 ELSE 0
                 END AS Active,
                 CASE 
                 WHEN nam.PrimaryItem IS NULL  THEN 0
                 ELSE 1
                 END AS AutoAddItemType,
                            ROW_NUMBER() OVER(
                                   ORDER BY 
                                              CASE WHEN @pSortby = 0 THEN nfd.[ViewRowNumber] END,
            CASE WHEN @pSortby = 0 THEN nfi.[TranNumber] END,
                                              CASE WHEN @pSortby = 1 THEN (nfi.[UnitPrice]-nfi.[DiscountInstant]) END,
                                              CASE WHEN @pSortby = 1 THEN nfi.[AvailQty] END DESC,
                                              CASE WHEN @pSortby = 1 THEN nfd.[HomePriority] END,
                                              CASE WHEN @pSortby = 1 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 1 THEN nfi.[TranNumber] END,
                                              CASE WHEN @pSortby = 2 THEN (nfi.[UnitPrice]-nfi.[DiscountInstant]) END DESC,
                                              CASE WHEN @pSortby = 2 THEN nfi.[AvailQty] END DESC,
                                              CASE WHEN @pSortby = 2 THEN nfd.[HomePriority] END,
                                              CASE WHEN @pSortby = 2 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 2 THEN nfi.[TranNumber] END,
                                              CASE WHEN @pSortby = 3 THEN (CAST(nfi.[DiscountInstant] AS FLOAT)/nfi.[UnitPrice]*100.0) END,
                                              CASE WHEN @pSortby = 3 THEN nfi.[AvailQty] END DESC,
                                              CASE WHEN @pSortby = 3 THEN nfd.[HomePriority] END,
                                              CASE WHEN @pSortby = 3 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 3 THEN nfi.[TranNumber] END,
                                              CASE WHEN @pSortby = 4 THEN (CAST(nfi.[DiscountInstant] AS FLOAT)/nfi.[UnitPrice]*100.0)END DESC,
                                              CASE WHEN @pSortby = 4 THEN nfi.[AvailQty] END DESC,
                                              CASE WHEN @pSortby = 4 THEN nfd.[HomePriority] END,
                                              CASE WHEN @pSortby = 4 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 4 THEN nfi.[TranNumber] END
                                  ) AS RowNumber  
          FROM   [imk].[dbo].[V_EC_NFFeaturedDeals_V5] nfd WITH(NOLOCK)
                 JOIN [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK)
                   ON nfd.DealItemsTransactionNumber = nfi.TranNumber 
                 LEFT JOIN Ecommerce2005.dbo.IM_AutoAddMaster nam WITH(NOLOCK)
                   ON nfi.Item = nam.PrimaryItem
                      AND GETDATE() BETWEEN nfi.StartTime  AND  nfi.ExpireTime
                      AND GETDATE() BETWEEN nam.StartTime  AND  nam.EndTime
                      AND nam.CompanyCode = nfi.CompanyCode
                      AND nam.CountryCode = nfi.CountryCode
                      AND nam.Status = 'A'
                      AND (nam.ViewState = 1)
                     LEFT JOIN ECommerce2005.dbo.EC_NFCampaign AS nc WITH(NOLOCK)  
                       ON nc.CampaignID = nfi.CampaignID   
          WHERE  nfi.[StartTime] < GETDATE()
                 AND nfi.[ExpireTime] > GETDATE()
                 AND nfi.[DisplayMark] = 1
                 AND nfi.[Active] = 1
                 AND nfi.IMStatus = 'A'
                 AND nfd.[Status] = 'A'
                 AND (@pCATEGORY IS NULL 
                      OR @pCATEGORY = 0
                      OR nfi.[itemCatalog] = @pCATEGORY)
                 AND nfi.BlockByAdditionalInfo = 0
               AND (nc.[Status]='A' OR nc.[Status] IS NULL)
                 AND nfi.[TranNumber] IN (SELECT TranNumber
                                     FROM   @TEMP_TABLE g
                                     WHERE  g.RowNumber = 1
                                     UNION ALL
                                     SELECT TranNumber
                                     FROM   Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
                                            INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
                                              ON ni.ItemNumber = c.ItemNumber
                                                                                            and ni.CountryCode = c.CountryCode
                                                                                            and ni.CompanyCode = c.CompanyCode
                                     WHERE  ni.CountryCode = @pCountrycode
                                            AND ni.CompanyCode = @pCompanyCode
                                            AND (c.itemgroupid = 0 OR c.itemgroupid IS NULL))
)
SELECT   TOP (@pPageSize)
               [ItemNumber],
               [UnitPrice],
               [DiscountInstant],
               [DiscountMark],
               [IsRefurbished],
               [IsOpenBox],
               [AvailQty],
               [SpecialImage],
               [HasScene7Image],
               [ImageSetImageList],
               [ImageName],
               [SpecialImageList],
               [Description],
               [WebDescription],
               [StartTime],
               [ExpireTime],
               [ItemCatalog],
               [SubcategoryName],
               [AutoAddItemType],
               [Active]
FROM CTE_FeaturedDeals R
WHERE    RowNumber > (@pPAGEINDEX - 1) * @pPageSize
ORDER BY RowNumber
    ]]>
    </commandText>
    <parameters>
      <param name="PageIndex" dbType="Int32"/>
      <param name="PageSize" dbType="Int32"/>
      <param name="Category" dbType="Int32"/>
      <param name="Sortby" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetFeaturedDealsCategory" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @pCountryCode char(3) = @CountryCode
DECLARE @pCompanyCode int     = @CompanyCode

--START
DECLARE @TEMP_TABLE TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TranNumber      INT NOT NULL,
    ItemGroupID     INT,
    RowNumber       INT,
    Qty             INT,
    ParentItem      VARCHAR(20),
    ItemNumber      VARCHAR(20)
)
  
INSERT INTO @TEMP_TABLE(TranNumber,ItemGroupID,RowNumber,Qty,ParentItem, ItemNumber)
SELECT   ni.TranNumber,
         c.ItemGroupID,
               0,
               imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
               c.ParentItem,
               ni.ItemNumber
    FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN [imk].[dbo].[V_EC_NFFeaturedDeals_V5] nfd WITH(NOLOCK)  
      ON nfd.DealItemsTransactionNumber = ni.TranNumber
INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
      ON ni.ItemNumber=c.ItemNumber
               and c.CountryCode = ni.CountryCode
               and c.CompanyCode = ni.CompanyCode
LEFT JOIN ECommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK) 
              ON ia.ItemNumber = ni.ItemNumber 
              AND ia.CountryCode = ni.CountryCode 
              AND ia.CompanyCode = ni.CompanyCode 
              AND ia.DisplayStatus = 1 
                    AND ia.ProcessStatus =1
LEFT JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
           ON ni.ItemNumber = ir.ItemNumber
                 and ir.CountryCode = ni.CountryCode
                 and ir.CompanyCode = ni.CompanyCode
                 AND ir.ThirdpartyCode ='FLS' AND ir.Status=1
LEFT JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
               ON ni.ItemNumber = ii.ItemNumber  
               and ii.CountryCode = ni.CountryCode 
  WHERE ni.CountryCode=@pCountrycode AND ni.CompanyCode= @pCompanyCode
    AND ni.DisplayMark=1 AND ni.Status='A' AND c.itemgroupid <> 0 
    AND ni.[StartTime]<GETDATE() AND ni.[ExpireTime]>GETDATE()
    AND nfd.[Status]='A'
    AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))

DECLARE @TEMP_ItemHierarchy TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem      VARCHAR(20),
    ItemGroupID     INT,
    ItemNumber      VARCHAR(20)
)

INSERT INTO @TEMP_ItemHierarchy(ItemGroupID, ParentItem, ItemNumber)
SELECT ii.ItemGroupID, ii.ParentItem, ii.Item
FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
    AND ItemGroupID in(SELECT DISTINCT ItemGroupID FROM @TEMP_TABLE) 
    AND Item in (SELECT DISTINCT ItemNumber FROM @TEMP_TABLE)
GROUP BY ii.ParentItem, ii.ItemGroupID, ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM @TEMP_TABLE c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @pCompanyCode AND pc.CountryCode = @pCountryCode
WHERE pc.Status = 1

DELETE @TEMP_TABLE
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM @TEMP_TABLE
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO @TEMP_TABLE (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE @TEMP_TABLE WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        *
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO @TEMP_TABLE (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1 

---- end

SELECT DISTINCT
   [itemCatalog] AS ID
  ,[SubcategoryName] AS Name   
    FROM [imk].[dbo].[V_EC_NFFeaturedDeals_V5] nfd WITH(NOLOCK)  
    JOIN [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK) 
    ON nfd.DealItemsTransactionNumber=nfi.TranNumber 
    LEFT JOIN Ecommerce2005.dbo.IM_AutoAddMaster nam WITH(NOLOCK) 
         ON nfi.Item = nam.PrimaryItem 
        AND GETDATE() BETWEEN nfi.StartTime  AND  nfi.ExpireTime
        AND GETDATE() BETWEEN nam.StartTime  AND  nam.EndTime
        AND nam.CompanyCode=nfi.CompanyCode 
        AND nam.CountryCode=nfi.CountryCode 
        AND nam.Status='A'
        AND (nam.ViewState = 1)
        LEFT JOIN ECommerce2005.dbo.EC_NFCampaign AS nc WITH(NOLOCK)  
    ON nc.CampaignID = nfi.CampaignID   
    WHERE nfi.[StartTime]<GETDATE() AND nfi.[ExpireTime]>GETDATE()
    AND nfi.[DisplayMark]=1 
    AND nfi.[Active]=1
    AND nfi.IMStatus = 'A'
    AND nfd.[Status]='A'  
    AND nfi.BlockByAdditionalInfo = 0
    AND (nc.[Status]='A' OR nc.[Status] IS NULL)
    AND nfi.[TranNumber] IN 
       (
             SELECT TranNumber 
               FROM @TEMP_TABLE g
              WHERE g.RowNumber = 1
          UNION ALL
             SELECT TranNumber
               FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
         INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
                 ON ni.ItemNumber=c.ItemNumber
                                      and ni.CountryCode = c.CountryCode
                                      and ni.CompanyCode = c.CompanyCode
              WHERE ni.CountryCode=@pCountrycode
                AND ni.CompanyCode=@pCompanyCode
                AND (c.itemgroupid=0 OR c.itemgroupid IS NULL)
       )  
      ]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <!--featured deals end-->

  <!--featured store begin-->
  <dataCommand name="GetFeaturedStoreCount" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
        SELECT   TOP 1 COUNT(1) AS TotalCount
        FROM     ECommerce2005.dbo.EC_NFFeaturedStore nfs WITH(NOLOCK)
                 JOIN ECommerce2005.dbo.EC_NFCampaign AS nfc WITH(NOLOCK)
                   ON nfs.CampaignTransactionNumber = nfc.TranNumber
        WHERE    nfc.CountryCode=@CountryCode
                 AND nfc.CompanyCode=@CompanyCode
                 AND nfs.[Status] = 'A'
                 AND nfc.Status = 'A'
                 AND nfc.StartTime < GETDATE()
                 AND nfc.ExpireTime > GETDATE()
                 AND nfc.CampaignType = 0
                                       ]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetFeaturedStore" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
       SELECT   TOP (@PageSize)
                            CampaignId,
                 CampaignName,
                 StartTime,
                 ExpireTime,
                 CampaignDescription,
                 ImageName,
                 CampaignType,
                 IsNeedLogin
        FROM
                 (SELECT   nfc.CampaignId,
                           nfc.CampaignName,
                           nfc.StartTime,
                           nfc.ExpireTime,
                           nfc.CampaignDescription,
                           nfc.ImageName,
                           nfc.CampaignType,
                           nfc.IsNeedLogin,
                                                  ROW_NUMBER() OVER(ORDER BY nfc.StartTime DESC,nh.[Priority],nfc.CampaignId) AS RowNumber
                  FROM     ECommerce2005.dbo.EC_NFFeaturedStore nfs WITH(NOLOCK)
                           INNER JOIN ECommerce2005.dbo.EC_NFCampaign AS nfc WITH(NOLOCK)
                             ON nfs.CampaignTransactionNumber = nfc.TranNumber
                                             INNER JOIN [ECommerce2005].[dbo].[EC_NFHomepage] nh WITH(NOLOCK)
                                                   ON nh.CampaignID = nfc.CampaignID 
                  WHERE
                           nh.CountryCode=@CountryCode
                           AND nh.CompanyCode=@CompanyCode 
                           AND nfs.[Status] = 'A'
                           AND nfc.Status = 'A'
                           AND nfc.StartTime < GETDATE()
                           AND nfc.ExpireTime > GETDATE()
                           AND nfc.CampaignType = 0)R
       WHERE  RowNumber>(@PageIndex-1)*@PageSize
       ORDER BY RowNumber
                                       ]]>
    </commandText>
    <parameters>
      <param name="PageIndex" dbType="Int32"/>
      <param name="PageSize" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <!--featured store end-->

  <!--newegg flash store begin-->
  <dataCommand name="GetNeweggFlashStoreCount" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
        DECLARE @pCountryCode char(3) = @CountryCode
        DECLARE @pCompanyCode int     = @CompanyCode
        DECLARE @ItemCatalog int = @in_ItemCatalog
        DECLARE @StoreId     int = @in_StoreId 

IF Object_id('Tempdb..#TEMP_TABLE_FLASHSTORECOUNT') IS NOT NULL   
	DROP TABLE #TEMP_TABLE_FLASHSTORECOUNT 
create table #TEMP_TABLE_FLASHSTORECOUNT 
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TranNumber      INT NOT NULL,
    ItemGroupID     INT,
    RowNumber       INT,
    Qty             INT,
    ParentItem      VARCHAR(20),
    ItemNumber      VARCHAR(20)
)

INSERT INTO #TEMP_TABLE_FLASHSTORECOUNT (TranNumber, ItemGroupID, RowNumber, Qty, ParentItem, ItemNumber)
SELECT
    ni.TranNumber,
    c.ItemGroupID,
    0,
    imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
    c.ParentItem,
    ni.ItemNumber
FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
ON ni.ItemNumber = c.ItemNumber
    AND c.CountryCode = ni.CountryCode
    AND c.CompanyCode = ni.CompanyCode
INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
ON nsm.ItemCatalog =c.PatchCount 
    AND nsm.CompanyCode = ni.CompanyCode 
    AND nsm.CountryCode  = ni.CountryCode
LEFT JOIN ECommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK) 
ON ia.ItemNumber = ni.ItemNumber 
    AND ia.CountryCode = ni.CountryCode 
    AND ia.CompanyCode = ni.CompanyCode 
    AND ia.DisplayStatus = 1 
    AND ia.ProcessStatus =1
LEFT JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
ON ni.ItemNumber = ir.ItemNumber
    AND ir.CountryCode = ni.CountryCode
    AND ir.CompanyCode = ni.CompanyCode
    AND ir.ThirdpartyCode ='FLS' AND ir.Status=1
LEFT JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
ON ni.ItemNumber = ii.ItemNumber  AND ii.CountryCode = ni.CountryCode 
WHERE ni.CountryCode = @pCountrycode
    AND ni.CompanyCode = @pCompanyCode
    AND (@StoreId IS NULL OR @StoreId =0 OR nsm.NFStoreID = @StoreId)
    AND ni.DisplayMark = 1
    AND ni.Status = 'A'
    AND c.itemgroupid <> 0
    AND ni.StartTime<GETDATE() 
    AND ni.ExpireTime>GETDATE()
    AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))

 create index ix_#TEMP_TABLE_FLASHSTORECOUNT1  on #TEMP_TABLE_FLASHSTORECOUNT 
(ItemNumber,ItemGroupID)


DECLARE @TEMP_ItemHierarchy TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem      VARCHAR(20),
    ItemGroupID     INT,
    ItemNumber      VARCHAR(20)
)

INSERT INTO @TEMP_ItemHierarchy(ItemGroupID, ParentItem, ItemNumber)
SELECT ii.ItemGroupID, ii.ParentItem, ii.Item
FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
    AND ItemGroupID in(SELECT DISTINCT ItemGroupID FROM #TEMP_TABLE_FLASHSTORECOUNT) 
    AND Item in (SELECT DISTINCT ItemNumber FROM #TEMP_TABLE_FLASHSTORECOUNT)
GROUP BY ii.ParentItem, ii.ItemGroupID, ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM #TEMP_TABLE_FLASHSTORECOUNT c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @pCompanyCode AND pc.CountryCode = @pCountryCode
WHERE pc.Status = 1

DELETE #TEMP_TABLE_FLASHSTORECOUNT
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM #TEMP_TABLE_FLASHSTORECOUNT
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO #TEMP_TABLE_FLASHSTORECOUNT (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE #TEMP_TABLE_FLASHSTORECOUNT WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        *
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO #TEMP_TABLE_FLASHSTORECOUNT (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1

-------- end

SELECT
    COUNT(DISTINCT(nfi.itemCatalog)) AS TotalSubCategory,
    COUNT(1) AS TotalCount,
    SUM(CASE nfi.CampaignId WHEN 0 THEN 0 ELSE 1 END) AS CampaignIncludedCount
FROM [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK)
INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
ON nsm.ItemCatalog = nfi.itemCatalog 
    AND nsm.CountryCode = nfi.CountryCode
    AND nsm.CompanyCode = nfi.CompanyCode
LEFT JOIN ECommerce2005.dbo.EC_NFCampaign AS nc WITH(NOLOCK)  
ON  nc.CampaignID = nfi.CampaignID   
WHERE nfi.[StartTime] < GETDATE()
    AND nfi.[ExpireTime] > GETDATE()
    AND nfi.[DisplayMark] = 1
    AND nfi.[Active] = 1
    AND nfi.IMStatus = 'A'
    AND nsm.[Status] = 'A'
    AND (@STOREID IS NULL OR @STOREID =0 OR nsm.NFStoreID = @STOREID)
    AND (@ItemCatalog IS NULL OR @ItemCatalog=0 OR nfi.itemCatalog = @ItemCatalog)
    AND nfi.BlockByAdditionalInfo = 0
    AND (nc.[Status]='A' OR nc.[Status] IS NULL)
    AND nfi.[TranNumber] IN (
        SELECT TranNumber
        FROM   #TEMP_TABLE_FLASHSTORECOUNT g
        WHERE  g.RowNumber = 1
        
        UNION ALL
        SELECT TranNumber
        FROM   Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
        INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
        ON ni.ItemNumber = c.ItemNumber
            AND ni.CountryCode = c.CountryCode
            AND ni.CompanyCode = c.CompanyCode
        WHERE  ni.CountryCode = @pCountrycode
            AND ni.CompanyCode = @pCompanyCode
            AND (c.itemgroupid = 0 OR c.itemgroupid IS NULL ))
    ]]>
    </commandText>
    <parameters>
      <param name="in_ItemCatalog" dbType="Int32"/>
      <param name="in_StoreId" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetNeweggFlashStoreCategory" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
DECLARE @pCountryCode char(3) = @CountryCode
      DECLARE @pCompanyCode int     = @CompanyCode
      DECLARE @pStoreId     int = @StoreId 
-- start
DECLARE @TEMP_TABLE TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TranNumber      INT NOT NULL,
    ItemGroupID     INT,
    RowNumber       INT,
    Qty             INT,
    ParentItem      VARCHAR(20),
    ItemNumber      VARCHAR(20)
)
  
INSERT INTO @TEMP_TABLE(TranNumber,ItemGroupID,RowNumber,Qty,ParentItem, ItemNumber)
SELECT   ni.TranNumber,
         c.ItemGroupID,
               0,
               imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
               c.ParentItem,
               ni.ItemNumber
FROM     Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
         INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
           ON ni.ItemNumber = c.ItemNumber
                       and ni.CountryCode = c.CountryCode
                       and ni.CompanyCode = c.CompanyCode
        INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
                           ON nsm.ItemCatalog =c.PatchCount
                               and nsm.CountryCode = ni.CountryCode and nsm.CompanyCode = ni.CompanyCode
            LEFT JOIN ECommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK) 
              ON ia.ItemNumber = ni.ItemNumber 
              AND ia.CountryCode = ni.CountryCode 
              AND ia.CompanyCode = ni.CompanyCode 
              AND ia.DisplayStatus = 1 
                    AND ia.ProcessStatus =1
         left JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
           ON ni.ItemNumber = ir.ItemNumber
                         and ir.CountryCode = ni.CountryCode
                         and ir.CompanyCode = ni.CompanyCode
                         AND ir.ThirdpartyCode ='FLS' AND ir.Status=1
               left JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
           ON ni.ItemNumber = ii.ItemNumber  
                         and ii.CountryCode = ni.CountryCode 
WHERE    ni.CountryCode = @pCountrycode
         AND ni.CompanyCode = @pCompanyCode
        AND (@pStoreId IS NULL OR @pStoreId =0 OR nsm.NFStoreID = @pStoreId)
         AND ni.DisplayMark = 1
         AND ni.Status = 'A'
         AND c.itemgroupid <> 0
         AND ni.StartTime<GETDATE() 
         AND ni.ExpireTime>GETDATE()
     AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))
     
     DECLARE @TEMP_ItemHierarchy TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem      VARCHAR(20),
    ItemGroupID     INT,
    ItemNumber      VARCHAR(20)
)

INSERT INTO @TEMP_ItemHierarchy(ItemGroupID, ParentItem, ItemNumber)
SELECT ii.ItemGroupID, ii.ParentItem, ii.Item
FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
    AND ItemGroupID in(SELECT DISTINCT ItemGroupID FROM @TEMP_TABLE) 
    AND Item in (SELECT DISTINCT ItemNumber FROM @TEMP_TABLE)
GROUP BY ii.ParentItem, ii.ItemGroupID, ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM @TEMP_TABLE c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @pCompanyCode AND pc.CountryCode = @pCountryCode
WHERE pc.Status = 1

DELETE @TEMP_TABLE
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM @TEMP_TABLE
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO @TEMP_TABLE (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE @TEMP_TABLE WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        *
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO @TEMP_TABLE (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1

---- end

SELECT DISTINCT nfi.[itemCatalog] AS ID,
                nfi.[SubcategoryName] AS Name
FROM   [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK)
        INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
          ON nsm.ItemCatalog = nfi.itemCatalog
                       and nsm.CountryCode = nfi.CountryCode and nsm.CompanyCode = nfi.CompanyCode
        LEFT JOIN ECommerce2005.dbo.EC_NFCampaign AS nc WITH(NOLOCK)  
        ON nc.CampaignID = nfi.CampaignID  
WHERE  nfi.[StartTime] < GETDATE()
        AND nfi.[ExpireTime] > GETDATE()
        AND nfi.[DisplayMark] = 1
        AND nfi.[Active] = 1
        AND nfi.IMStatus = 'A'
        AND nsm.status= 'A'
        AND nfi.BlockByAdditionalInfo = 0
         AND (@pSTOREID IS NULL OR @pSTOREID = 0 OR nsm.NFStoreID = @pSTOREID)
           AND (nc.[Status]='A' OR nc.[Status] IS NULL)
        AND nfi.[TranNumber] IN (SELECT TranNumber
                            FROM   @TEMP_TABLE g
                            WHERE  g.RowNumber = 1
                            UNION ALL
                            SELECT TranNumber
                            FROM   Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
                                  INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
                                    ON ni.ItemNumber = c.ItemNumber
                                                                     and c.CompanyCode = ni.CompanyCode
                                                                     and c.CountryCode = ni.CountryCode
                            WHERE  ni.CountryCode = @pCountrycode
                                  AND ni.CompanyCode = @pCompanyCode
                                  AND (c.itemgroupid = 0
                                        OR c.itemgroupid IS NULL ))
    ]]>
    </commandText>
    <parameters>
      <param name="StoreId" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetNeweggFlashStore" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @pCountryCode char(3) = @CountryCode
	  DECLARE @pCompanyCode int     = @CompanyCode
      DECLARE @pSTOREID     int = @StoreId 
      DECLARE @pPageSize int = @PageSize
      DECLARE @pPageIndex int = @PageIndex
      Declare @pCATEGORY int= @Category
      DECLARE @pSortby int = @Sortby
      
-- start
IF Object_id('Tempdb..#TEMP_TABLE_FLASHSTORE') IS NOT NULL   
	DROP TABLE #TEMP_TABLE_FLASHSTORE 
create table #TEMP_TABLE_FLASHSTORE 
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    TranNumber      INT NOT NULL,
    ItemGroupID     INT,
    RowNumber       INT,
    Qty             INT,
    ParentItem      VARCHAR(20),
    ItemNumber      VARCHAR(20)
)
  
INSERT INTO #TEMP_TABLE_FLASHSTORE(TranNumber,ItemGroupID,RowNumber,Qty,ParentItem, ItemNumber)
SELECT   ni.TranNumber,
         c.ItemGroupID,
		     0,
		     imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
		     c.ParentItem,
		     ni.ItemNumber
FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
     INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
           ON ni.ItemNumber = c.ItemNumber
			     and c.CountryCode = ni.CountryCode
			      and c.CompanyCode = ni.CompanyCode
         INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
			    ON nsm.ItemCatalog = c.PatchCount 
			and nsm.CountryCode = ni.CountryCode
				and nsm.CompanyCode = ni.CompanyCode 
            LEFT JOIN ECommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK) 
              ON ia.ItemNumber = ni.ItemNumber 
              AND ia.CountryCode = ni.CountryCode 
              AND ia.CompanyCode = ni.CompanyCode 
              AND ia.DisplayStatus = 1 
	            AND ia.ProcessStatus =1
         LEFT JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
           ON ni.ItemNumber = ir.ItemNumber
			  and ir.CountryCode = ni.CountryCode
			  and ir.CompanyCode = ni.CompanyCode
			  AND ir.ThirdpartyCode ='FLS' AND ir.Status=1
		 LEFT JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
           ON ni.ItemNumber = ii.ItemNumber  
			  and ii.CountryCode = ni.CountryCode
        
WHERE    ni.CountryCode = @pCountrycode
         AND ni.CompanyCode = @pCompanyCode
	 AND (@pSTOREID IS NULL OR @pSTOREID = 0 OR nsm.NFStoreID = @pSTOREID)
         AND ni.DisplayMark = 1
         AND ni.Status = 'A'
         AND c.itemgroupid <> 0
         AND ni.StartTime < GETDATE()
         AND ni.ExpireTime > GETDATE()
     AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))
     

 create index ix_#TEMP_TABLE_FLASHSTORE1  on #TEMP_TABLE_FLASHSTORE 
(ItemNumber,ItemGroupID)

   DECLARE @TEMP_ItemHierarchy TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem      VARCHAR(20),
    ItemGroupID     INT,
    ItemNumber      VARCHAR(20)
)

INSERT INTO @TEMP_ItemHierarchy(ItemGroupID, ParentItem, ItemNumber)
SELECT ii.ItemGroupID, ii.ParentItem, ii.Item
FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
    AND ItemGroupID in(SELECT DISTINCT ItemGroupID FROM #TEMP_TABLE_FLASHSTORE) 
    AND Item in (SELECT DISTINCT ItemNumber FROM #TEMP_TABLE_FLASHSTORE)
GROUP BY ii.ParentItem, ii.ItemGroupID, ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM #TEMP_TABLE_FLASHSTORE c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @pCompanyCode AND pc.CountryCode = @pCountryCode
WHERE pc.Status = 1

DELETE #TEMP_TABLE_FLASHSTORE
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM #TEMP_TABLE_FLASHSTORE
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO #TEMP_TABLE_FLASHSTORE (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE #TEMP_TABLE_FLASHSTORE WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        *
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO #TEMP_TABLE_FLASHSTORE (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1

---- end
;WITH CTE_DetailList AS
(
    SELECT
        nfi.[TranNumber],
        nfi.[Item] AS [ItemNumber],
        nfi.[UnitPrice],
        nfi.[CampaignId],
        nfi.[DiscountInstant],
        nfi.[DiscountMark],
        nfi.[IsRefurbished],
        nfi.[IsOpenBox],
        nfi.[AvailQty],
        nfi.[SpecialImage],
        nfi.[HasScene7Image],
        nfi.[ImageSetImageList],
        nfi.[ImageName],
        nfi.[SpecialImageList],
        nfi.[Description],
        nfi.[WebDescription],
        nfi.[StartTime],
        nfi.[ExpireTime],
        nfi.[ItemCatalog],
        nfi.[SubcategoryName],
        CASE WHEN nfi.Active = 1 AND nfi.Checked = '1' THEN 1
             ELSE 0
        END AS Active,
        CASE WHEN nam.PrimaryItem IS NULL THEN 0
             ELSE 1
        END AS AutoAddItemType,
        ROW_NUMBER() OVER (ORDER BY 
            CASE WHEN @pSortby = 0 THEN (CASE ISNULL(nfd.[Status],'D') WHEN 'A' THEN 0 ELSE 1 END) END,
            CASE WHEN @pSortby = 0 THEN nfi.[StartTime] END DESC,
            CASE WHEN @pSortby = 0 THEN COALESCE(nh1.[Priority],nh2.[Priority],99999) END,
            CASE WHEN @pSortby = 0 THEN nfi.[TranNumber] END,
            CASE WHEN @pSortby = 1 THEN (nfi.[UnitPrice]-nfi.[DiscountInstant]) END,
            CASE WHEN @pSortby = 1 THEN nfi.[AvailQty] END DESC,
            CASE WHEN @pSortby = 1 THEN COALESCE(nh1.[Priority],nh2.[Priority],99999) END,
            CASE WHEN @pSortby = 1 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 1 THEN nfi.[TranNumber] END,
            CASE WHEN @pSortby = 2 THEN nfi.[UnitPrice]-nfi.[DiscountInstant] END DESC,
            CASE WHEN @pSortby = 2 THEN nfi.[AvailQty] END DESC,
            CASE WHEN @pSortby = 2 THEN COALESCE(nh1.[Priority],nh2.[Priority],99999) END,
            CASE WHEN @pSortby = 2 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 2 THEN nfi.[TranNumber] END,
            CASE WHEN @pSortby = 3 THEN (CAST(nfi.[DiscountInstant] AS FLOAT)/nfi.[UnitPrice]*100.0) END,
            CASE WHEN @pSortby = 3 THEN nfi.[AvailQty] END DESC,
            CASE WHEN @pSortby = 3 THEN COALESCE(nh1.[Priority],nh2.[Priority],99999) END,
            CASE WHEN @pSortby = 3 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 3 THEN nfi.[TranNumber] END,
            CASE WHEN @pSortby = 4 THEN (CAST(nfi.[DiscountInstant] AS FLOAT)/nfi.[UnitPrice]*100.0) END DESC,
            CASE WHEN @pSortby = 4 THEN nfi.[AvailQty] END DESC,
            CASE WHEN @pSortby = 4 THEN COALESCE(nh1.[Priority],nh2.[Priority],99999) END,
            CASE WHEN @pSortby = 4 THEN nfi.[ExpireTime] END,
            CASE WHEN @pSortby = 4 THEN nfi.[TranNumber] END
          ) AS RowNumber
    FROM [imk].[dbo].[V_EC_NFItemsBase_V5] nfi WITH(NOLOCK)
    INNER JOIN Ecommerce2005.dbo.EC_NFStoreMapping nsm WITH(NOLOCK)
    ON nsm.ItemCatalog = nfi.itemCatalog 
        AND nsm.CountryCode = nfi.CountryCode
        AND nsm.CompanyCode = nfi.CompanyCode
    LEFT JOIN ECommerce2005.dbo.EC_NFCampaign AS nc WITH(NOLOCK)  
    ON nc.CampaignID = nfi.CampaignID   
    LEFT JOIN ECommerce2005.dbo.EC_NFHomepage AS nh1 WITH(NOLOCK)  
    ON nh1.ItemType = 0 AND nh1.CampaignID = nc.CampaignID
    LEFT JOIN ECommerce2005.dbo.EC_NFHomepage AS nh2 WITH(NOLOCK)  
    ON nh2.ItemType = 1 AND nh2.ReferenceNumber = nfi.TranNumber
    LEFT JOIN imk.dbo.V_EC_NFFeaturedDeals_V5 nfd WITH(NOLOCK)
    ON nfd.DealItemsTransactionNumber = nfi.TranNumber AND nfd.IsBIData = 0 
    LEFT JOIN Ecommerce2005.dbo.IM_AutoAddMaster nam WITH(NOLOCK)
    ON nfi.Item = nam.PrimaryItem
        AND GETDATE() BETWEEN nfi.StartTime  AND  nfi.ExpireTime
        AND GETDATE() BETWEEN nam.StartTime  AND  nam.EndTime
        AND nam.CompanyCode = nfi.CompanyCode
        AND nam.CountryCode = nfi.CountryCode
        AND nam.Status = 'A'
        AND (nam.ViewState = 1)
    WHERE nfi.[StartTime] < GETDATE()
        AND nfi.[ExpireTime] > GETDATE()
        AND nfi.[DisplayMark] = 1
        AND nfi.[Active] = 1
        AND nfi.IMStatus = 'A'
        AND nsm.[Status] = 'A'
        AND (@pSTOREID IS NULL OR @pSTOREID =0 OR nsm.NFStoreID = @pSTOREID)
        AND nfi.BlockByAdditionalInfo = 0
        AND (@pCategory IS NULL OR @pCategory = 0 OR nfi.[itemCatalog] = @pCategory)
        AND (nc.[Status]='A' OR nc.[Status] IS NULL)
        AND nfi.[TranNumber] IN (
            SELECT TranNumber
            FROM   #TEMP_TABLE_FLASHSTORE g
            WHERE  g.RowNumber = 1
            
            UNION ALL
            SELECT TranNumber
            FROM   Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
            INNER JOIN Ecommerce2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
            ON ni.ItemNumber = c.ItemNumber
                AND ni.CountryCode = c.CountryCode
                AND ni.CompanyCode = c.CompanyCode
            WHERE  ni.CountryCode = @pCountrycode
                AND ni.CompanyCode = @pCompanyCode
                AND (c.itemgroupid = 0 OR c.itemgroupid IS NULL )
        )
)
SELECT TOP (@pPageSize)
    [TranNumber],
    [ItemNumber],
    [CampaignId],
    [UnitPrice],
    [DiscountInstant],
    [DiscountMark],
    [IsRefurbished],
    [IsOpenBox],
    [AvailQty],
    [SpecialImage],
    [HasScene7Image],
    [ImageSetImageList],
    [ImageName],
    [SpecialImageList],
    [Description],
    [WebDescription],
    [StartTime],
    [ExpireTime],
    [ItemCatalog],
    [SubcategoryName],
    [AutoAddItemType],
    [Active]
FROM CTE_DetailList
WHERE RowNumber > (@pPageIndex - 1) * @pPageSize
ORDER BY RowNumber
    ]]>
    </commandText>
    <parameters>
      <param name="PageIndex" dbType="Int32"/>
      <param name="PageSize" dbType="Int32"/>
      <param name="Category" dbType="Int32"/>
      <param name="Sortby" dbType="Int32"/>
      <param name="StoreId" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <!--newegg flash store end-->

  <!--special store begin-->
  <dataCommand name="GetSpecialStore" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[
      DECLARE @pPageSize int = @PageSize
      DECLARE @pPageIndex int = @PageIndex
      DECLARE @pCompanyCode int     = @CompanyCode
DECLARE @pCountryCode char(3) = @CountryCode


-- start
DECLARE @TEMP_TABLE TABLE (
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  TranNumber  INT NOT NULL ,
  ItemGroupID INT,
  RowNumber INT, Qty int, ParentItem varchar(20), ItemNumber varchar(20))

INSERT INTO @TEMP_TABLE(TranNumber,ItemGroupID,RowNumber,Qty,ParentItem, ItemNumber)
SELECT   ni.TranNumber,
         c.ItemGroupID,
               0,
               imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
               c.ParentItem,
               ni.ItemNumber
FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
        ON ni.ItemNumber = c.ItemNumber
        and c.CountryCode = ni.CountryCode
        and c.CompanyCode = ni.CompanyCode
INNER JOIN Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
        ON h.ReferenceNumber=ni.TranNumber 
LEFT JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
  ON ia.ItemNumber=ni.ItemNumber 
  AND ia.CountryCode = ni.CountryCode   
  AND ia.CompanyCode = ni.CompanyCode  
  AND ia.DisplayStatus = 1 
        AND ia.ProcessStatus =1
LEFT JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
    ON ii.ItemNumber = ni.ItemNumber
        and ii.CountryCode = ni.CountryCode
LEFT JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
        ON ni.ItemNumber = ir.ItemNumber
        and ir.CountryCode =ni.CountryCode
        and ir.CompanyCode = ni.CompanyCode
      AND ir.ThirdpartyCode = 'FLS'
      AND ir.Status = 1
WHERE h.ItemType=1
          AND ni.DisplayMark = 1
      AND ni.Status = 'A'
      AND c.itemgroupid <> 0
      AND h.Status='A'
      AND ni.StartTime<GETDATE() AND ni.ExpireTime>GETDATE()
        and ni.CountryCode = @pCountrycode
        and ni.CompanyCode = @pCompanycode
   AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))
     
    DECLARE @TEMP_ItemHierarchy TABLE 
    ( 
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem varchar(20),
  ItemGroupID INT , 
  ItemNumber varchar(20)
  )
   INSERT INTO @TEMP_ItemHierarchy(ItemGroupID,ParentItem, ItemNumber)
SELECT  ii.ItemGroupID,ii.ParentItem,ii.Item
                                              FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
                                        WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
                                              and ItemGroupID in(select distinct ItemGroupID from @TEMP_TABLE) 
                                              and Item in (select distinct ItemNumber from @TEMP_TABLE)
                                        GROUP BY ii.ParentItem,ii.ItemGroupID,ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM @TEMP_TABLE c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @pCompanyCode AND pc.CountryCode = @pCountryCode
WHERE pc.Status = 1

DELETE @TEMP_TABLE
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM @TEMP_TABLE
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO @TEMP_TABLE (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE @TEMP_TABLE WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS 
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO @TEMP_TABLE (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1 

insert into @TEMP_TABLE(TranNumber, RowNumber)
SELECT ni.TranNumber,1
FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
  ON ni.ItemNumber = c.ItemNumber
        and ni.CompanyCode = c.CompanyCode
        and ni.CountryCode = c.CountryCode
INNER JOIN Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
        ON h.ReferenceNumber=ni.TranNumber 
LEFT JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
  ON ia.ItemNumber=ni.ItemNumber 
  AND ia.CountryCode = ni.CountryCode   
  AND ia.CompanyCode = ni.CompanyCode  
  AND ia.DisplayStatus = 1 
          AND ia.ProcessStatus =1
WHERE ni.DisplayMark = 1 AND h.ItemType=1
      AND ni.Status = 'A'
      AND (c.itemgroupid IS NULL OR c.itemgroupid=0)
      AND h.Status='A'
      AND ni.StartTime<GETDATE() AND ni.ExpireTime>GETDATE()
        and ni.CountryCode = @pCountrycode
        and ni.CompanyCode = @pCompanycode 
   AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))

---- end

SELECT TOP (@pPageSize)
           TranNumber,
           ItemNumber,
           CampaignID,
           Priority,
           ItemType,
           StartTime,
           ExpireTime,
           IsNeedLogin,
     SpecialStoreTranNumber
FROM
(
        SELECT TranNumber,
                  ItemNumber,
                  CampaignID,
                  Priority,
                  ItemType,
                  StartTime,
                  ExpireTime,
                  IsNeedLogin,
       SpecialStoreTranNumber,
                 ROW_NUMBER() OVER (ORDER BY StartTime DESC,Priority, SpecialStoreTranNumber) AS RowNumber
        FROM
        (
               SELECT h.CampaignID,
                  RTRIM(ISNULL(h.ItemNumber,'')) AS ItemNumber,
                  h.ReferenceNumber AS TranNumber,
                  ISNULL(nh.Priority,nh2.Priority) AS Priority,
                  h.ItemType,
                  d.StartTime,
                  d.ExpireTime,
                  d.IsNeedLogin,
       h.TranNumber AS SpecialStoreTranNumber
               FROM Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
               INNER JOIN Ecommerce2005.[dbo].[EC_NFDealItems] AS d WITH(NOLOCK)
                 ON h.ReferenceNumber=d.TranNumber 
               INNER JOIN Ecommerce2005.[dbo].[IM_NeweggFlash_ItemPromotion] fl WITH(NOLOCK)
                 ON fl.PCTransactionNumber = d.PromotionTransactionNumber 
                       AND fl.[Status] ='A'
                       AND fl.ThirdPartySiteID = 2
               LEFT JOIN Ecommerce2005.[dbo].[EC_NFHomepage] nh WITH(NOLOCK)
                 ON nh.ReferenceNumber=d.TranNumber AND nh.ItemType=1
        LEFT JOIN Ecommerce2005.[dbo].[EC_NFHomepage] nh2 WITH(NOLOCK)
                 ON nh2.CampaignId=h.CampaignId AND nh2.ItemType=0
               WHERE d.ExpireTime>GETDATE() 
                 AND d.StartTime<GETDATE() 
                 AND d.Status='A'
                 AND h.Status='A'
                 AND h.ItemType=1
                 AND h.CountryCode=@pCountrycode 
                       AND h.CompanyCode = @pCompanyCode 
      AND EXISTS(SELECT TOP 1 1 FROM @TEMP_TABLE WHERE TranNumber=h.ReferenceNumber AND RowNumber=1)
               UNION ALL
               SELECT h.CampaignId,
                  RTRIM(ISNULL(h.ItemNumber,'')) AS ItemNumber,
                  h.ReferenceNumber AS TranNumber,
                  h1.Priority,
                  h.ItemType,
                  c.StartTime,
                  c.ExpireTime,
                  c.IsNeedLogin,
       h.TranNumber AS SpecialStoreTranNumber
               FROM Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
               INNER JOIN Ecommerce2005.[dbo].[EC_NFCampaign] AS c WITH(NOLOCK)
                  ON h.ReferenceNumber=c.TranNumber
               INNER JOIN Ecommerce2005.[dbo].[EC_NFHomepage] AS h1 WITH(NOLOCK)
                 ON h1.CampaignID=h.CampaignID  
               WHERE c.ExpireTime>GETDATE() 
                 AND c.StartTime<GETDATE() 
                 AND c.Status='A'
                 AND h.Status='A'
                 AND h.ItemType=0
                 AND h1.ItemType=0
                 AND h.CampaignID>0
                 AND h.CountryCode=@pCountrycode AND h.CompanyCode = @pCompanyCode 
        ) R
) D
WHERE RowNumber>(@pPageIndex-1)*@pPageSize ORDER BY RowNumber
      ]]>
    </commandText>
    <parameters>
      <param name="PageIndex" dbType="Int32"/>
      <param name="PageSize" dbType="Int32"/>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>
  <dataCommand name="GetSpecialStoreCount" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[DECLARE @CompanyCode  int  = @in_CompanyCode
    DECLARE @CountryCode  char(3) = @in_Countrycode
      
-- start
DECLARE @TEMP_TABLE TABLE (
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
  TranNumber  INT NOT NULL ,
  ItemGroupID INT,
  RowNumber INT, Qty int, ParentItem varchar(20), ItemNumber varchar(20))

INSERT INTO @TEMP_TABLE(TranNumber,ItemGroupID,RowNumber,Qty,ParentItem, ItemNumber)
SELECT   ni.TranNumber,
         c.ItemGroupID,
               0,
               imk.dbo.UF_EC_NFGetAvailabelQTY(ir.Qty,ii.AvailableQty,ii.[3rdPartyReserved]),
               c.ParentItem,
               ni.ItemNumber
FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
        ON ni.ItemNumber = c.ItemNumber
        and ni.CountryCode = c.CountryCode
        and ni.CompanyCode = c.CompanyCode
INNER JOIN Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
        ON h.ReferenceNumber=ni.TranNumber 
LEFT JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
  ON ia.ItemNumber=ni.ItemNumber 
  AND ia.CountryCode = ni.CountryCode   
  AND ia.CompanyCode = ni.CompanyCode  
  AND ia.DisplayStatus = 1 
        AND ia.ProcessStatus =1
LEFT JOIN inventory.dbo.ItemInventory_Country ii WITH(NOLOCK)
    ON ii.ItemNumber = ni.ItemNumber
        and ii.CountryCode = ni.CountryCode
LEFT JOIN inventory.dbo.Inventory3rdpartyReserved ir WITH(NOLOCK)
        ON ni.ItemNumber = ir.ItemNumber
        and ir.CountryCode =ni.CountryCode
        and ir.CompanyCode = ni.CompanyCode
      AND ir.ThirdpartyCode = 'FLS'
      AND ir.Status = 1
WHERE ni.DisplayMark = 1
           AND h.ItemType=1
      AND ni.Status = 'A'
      AND c.itemgroupid <> 0
      AND h.Status='A'
      AND ni.StartTime<GETDATE() AND ni.ExpireTime>GETDATE()
        and ni.CountryCode = @countrycode
        and ni.CompanyCode = @companycode
   AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))
   
DECLARE @TEMP_ItemHierarchy TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ParentItem      VARCHAR(20),
    ItemGroupID     INT,
    ItemNumber      VARCHAR(20)
)

INSERT @TEMP_ItemHierarchy(ItemGroupID, ParentItem, ItemNumber)
SELECT ii.ItemGroupID, ii.ParentItem, ii.Item
FROM ECommerce2005.dbo.IM_ItemHierarchy ii WITH(nolock)
WHERE ii.parentitem IS NOT NULL AND  ii.ParentItem <>''
    AND ItemGroupID in(SELECT DISTINCT ItemGroupID FROM @TEMP_TABLE) 
    AND Item in (SELECT DISTINCT ItemNumber FROM @TEMP_TABLE)
GROUP BY ii.ParentItem, ii.ItemGroupID, ii.Item

DECLARE @Temp_GroupProperty TABLE
(
    TransactionNumber INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
    ItemGroupID     INT,
    tranNumber      INT,
    Qty             INT,
    PropertyDescription VARCHAR(50),
    ValueDescription    VARCHAR(2000),
    PropertyName    VARCHAR(50),
    Priority        INT
)

;WITH CTE_ItemProperties AS
(
    SELECT
        RTRIM(a2.ParentItem) AS ParentItem,
        ix.Propertyid AS PropertyCode,
        RTRIM(ips.PropertyDescription) AS PropertyDescription,
        RTRIM(SUBSTRING(
            ips.PropertyDescription, CHARINDEX('_', ips.PropertyDescription) + 1,
            LEN(ips.PropertyDescription) - CHARINDEX('_', ips.PropertyDescription)
        )) AS PropertyName, -- extract PropertyName for join
        CASE WHEN ix.Valueid IS NULL OR ix.Valueid = 0  THEN RTRIM(ix.userinputed)  
             ELSE RTRIM(ipv.ValueDescription)   
        END AS ValueDescription,  
        a2.itemGroupID,
        a2.ItemNumber
    FROM @TEMP_ItemHierarchy a2 
    INNER JOIN abs.dbo.arinvt01 a1 WITH(NOLOCK)   
    ON a2.ParentItem=a1.item   
    INNER JOIN CodeCenter.dbo.CatalogProperties cp WITH(NOLOCK)  
    ON cp.CatalogID = a1.PatchCount  
    INNER JOIN CodeCenter.dbo.ItemXMLProperties ix WITH(NOLOCK)  
    ON ix.ItemNumber = a2.ParentItem  
        AND cp.PropertyID = ix.Propertyid  
    INNER JOIN CodeCenter.dbo.ItemPropertiesSetup ips WITH(NOLOCK)  
    ON ix.PropertyID = ips.PropertyCode  
    LEFT JOIN CodeCenter.dbo.ItemPropertiesValues ipv WITH(NOLOCK)  
    ON ix.PropertyID = ipv.PropertyCode  
        AND ix.Valueid = ipv.ValueCode
    WHERE (ix.Valueid IS NOT NULL AND ix.Valueid != 0 OR ix.userinputed IS NOT NULL)  
        AND cp.InCoreProperty = 1 AND a2.ItemGroupID is not null
)
INSERT INTO @Temp_GroupProperty (ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority)
SELECT
    c.ItemGroupID, c.TranNumber, c.Qty,
    pg.PropertyDescription, pg.ValueDescription, pc.PropertyName, pc.Priority
FROM @TEMP_TABLE c
INNER JOIN CTE_ItemProperties pg
ON pg.ItemGroupID = c.ItemGroupID AND c.ItemNumber = pg.ItemNumber
INNER JOIN ECommerce2005.dbo.EC_NFItemPropertiesConfig pc WITH (NOLOCK)
ON pg.PropertyName = pc.PropertyName
    AND pc.CompanyCode = @CompanyCode AND pc.CountryCode = @CountryCode
WHERE pc.Status = 1

DELETE @TEMP_TABLE
WHERE ItemGroupID IN (SELECT ItemGroupID FROM @Temp_GroupProperty)

;WITH CTE_ItemGroup AS
(   
    SELECT ItemGroupID,TranNumber,
        ROW_NUMBER() OVER(PARTITION BY ItemGroupID ORDER BY MAX(Qty) DESC) AS RowNum
    FROM @TEMP_TABLE
    GROUP BY ItemGroupID, TranNumber
)
INSERT INTO @TEMP_TABLE (ItemGroupID, TranNumber, RowNumber)
SELECT ItemGroupID, TranNumber, RowNum
FROM CTE_ItemGroup
WHERE RowNum = 1

DELETE @TEMP_TABLE WHERE RowNumber = 0

;WITH CTE_GroupRank1 AS
(
    -- find all min priority for each itemgroupid(rankid =1)
    SELECT 
        ItemGroupID, tranNumber, Qty, PropertyDescription, ValueDescription, PropertyName, Priority
       , RANK() OVER(PARTITION BY ItemGroupID ORDER BY Priority ASC) AS rid 
    FROM @Temp_GroupProperty gp 
)
, CTE_GroupRank2 AS
(
    -- find max qty  for each group in every itemgroupid
    SELECT 
         ItemGroupID
        ,tranNumber 
        ,Qty 
        ,propertyname   
        ,ROW_NUMBER() OVER(PARTITION BY itemgroupid ,valuedescription ORDER BY qty DESC) AS rid 
    FROM CTE_GroupRank1
    WHERE rid = 1
)
INSERT INTO @TEMP_TABLE (TranNumber,ItemGroupID,RowNumber)
SELECT DISTINCT TranNumber, ItemGroupID, 1
FROM CTE_GroupRank2
WHERE rid = 1 

insert into @TEMP_TABLE(TranNumber, RowNumber)
SELECT ni.TranNumber,1
FROM Ecommerce2005.dbo.EC_NFDealItems ni WITH(NOLOCK)
INNER JOIN ECOMMERCE2005.dbo.EC_NFSwitchNormal c WITH(NOLOCK)
  ON ni.ItemNumber = c.ItemNumber
        and ni.CompanyCode = c.CompanyCode
        and ni.CountryCode = c.CountryCode
INNER JOIN Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
        ON h.ReferenceNumber=ni.TranNumber
           AND h.ItemType=1 
LEFT JOIN Ecommerce2005.dbo.EC_NFItemAdditionalInfo AS ia WITH(NOLOCK)   
  ON ia.ItemNumber=ni.ItemNumber 
  AND ia.CountryCode = ni.CountryCode   
  AND ia.CompanyCode = ni.CompanyCode  
  AND ia.DisplayStatus = 1 
          AND ia.ProcessStatus =1
WHERE ni.DisplayMark = 1 
      AND ni.Status = 'A'
      AND (c.itemgroupid IS NULL OR c.itemgroupid=0)
      AND h.Status='A'
      AND ni.StartTime<GETDATE() AND ni.ExpireTime>GETDATE()
        and ni.CountryCode = @countrycode
        and ni.CompanyCode = @companycode 
   AND ((ni.CampaignID = 0 AND ia.DisplayStatus = 1 AND ia.ProcessStatus =1 ) OR (ni.CampaignID <> 0))

---- end


SELECT COUNT(1)
FROM
(
  SELECT h.ReferenceNumber AS TranNumber
        FROM Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
  WHERE h.Status='A' 
  and h.CountryCode = @countrycode
  and h.CompanyCode = @companycode
AND EXISTS(SELECT TOP 1 1 FROM @TEMP_TABLE WHERE TranNumber=h.ReferenceNumber AND RowNumber=1)
        UNION ALL
        SELECT h.ReferenceNumber AS TranNumber
        FROM Ecommerce2005.[dbo].[EC_NFSpecialStore] AS h WITH(NOLOCK)
        INNER JOIN Ecommerce2005.[dbo].[EC_NFCampaign] AS c WITH(NOLOCK)
          ON h.ReferenceNumber=c.TranNumber
        INNER JOIN Ecommerce2005.[dbo].[EC_NFHomepage] AS h1 WITH(NOLOCK)
          ON h1.CampaignID=h.CampaignID 
        WHERE c.ExpireTime>GETDATE() 
          AND c.StartTime<GETDATE() 
          AND c.Status='A'
          AND h.Status='A'
          AND h.ItemType=0
          AND h.CampaignID>0
          AND h.CountryCode=@CountryCode AND h.CompanyCode = @CompanyCode 
) R

      ]]>
    </commandText>
    <parameters>
      <param name="in_CompanyCode" dbType="Int32"/>
      <param name="in_Countrycode" dbType="AnsiStringFixedLength" size="3"/>
    </parameters>
  </dataCommand>

  <!--special store end-->

  <!--additional info  start-->
  <dataCommand name="GetAdditionalInfosByItemNumber" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[ 
      DECLARE @pCompanyCode int     = @CompanyCode
      DECLARE @pCountryCode char(3) = @CountryCode
      
      SELECT 
          b.ItemNumber 
         ,b.MapPrice 
         ,b.GiftWrapItem 
         ,b.Active 
         ,b.HasOpcInventory 
         ,b.IsHot 
         ,b.Mailrebatedescrip 
         ,b.Mailrebateamount 
         ,b.InstantRebateAmount 
         ,(fl.PromotionUnitPrice-fl.PromotionInstantRebate) AS FinalPrice
         ,b.SubCategoryId
         ,b.SellerID
         ,b.BrandId
         ,b.IsRecertified
         ,b.IsOpenBox
         ,di.DetailInfo 
         ,b.PremierMark
      FROM ( 
              SELECT   
                  RTRIM(a.item) AS ItemNumber 
                 ,a.MapPrice 
                 ,RTRIM(ISNULL(a.GiftWrapItem,'')) AS GiftWrapItem
                 ,ISNULL(i.Active ,0) as Active
                 ,a.HasOpcInventory 
                 ,a.IsHot 
                 ,RTRIM(a.Mailrebatedescrip) AS Mailrebatedescrip 
                 ,RTRIM(a.Mailrebateamount) AS Mailrebateamount
                 ,a.InstantRebateAmount
                 ,a.UnitCost - ISNULL(a.instantRebateAmount, 0) as FinalPrice
                 ,a.CompanyCode
                 ,a.CountryCode
                            ,ISNULL(a.itemCatalog,0) AS SubCategoryId 
                            ,a.SellerID
                            ,a.Code AS BrandId
                            ,case a.ProductType when '002' then 1 else 0 end AS IsRecertified
                 ,case a.ProductType when '003' then 1 when '004' then 1 else 0 end AS IsOpenBox
                                        ,RTRIM(ISNULL(a.PremierMark,'')) AS PremierMark 
              FROM imk.dbo.V_EC_NeweggItemsList_Full_V2 a WITH(NOLOCK) 
              LEFT JOIN Inventory.dbo.ItemPriceSetting i with(nolock)
                                         on a.GiftWrapItem = i.ItemNumber 
                                         AND i.CountryCode =  @pCountryCode  
                  AND i.CompanyCode = @pCompanyCode  
              WHERE  
                  a.Item IN (@itemNumbers) 
                  AND a.CountryCode = @pCountryCode 
                  AND a.CompanyCode = @pCompanyCode 
           ) b 
          INNER JOIN ECommerce2005.dbo.EC_NFDealItems eni WITH(NOLOCK)
         ON eni.ItemNumber=b.ItemNumber
            AND eni.[Status] = 'A'
                   AND eni.CompanyCode=b.CompanyCode
                       AND eni.CountryCode=b.CountryCode
      
          INNER JOIN eCommerce2005.dbo.IM_NeweggFlash_ItemPromotion fl WITH(NOLOCK)
               ON fl.PCTransactionNumber=eni.PromotionTransactionNumber
                  AND fl.ThirdPartySiteID = 2 
       AND fl.[Status] = 'A'
       AND fl.StartDate <= GETDATE() and GETDATE() < fl.EndDate
      LEFT JOIN  Ecommerce2005.dbo. EC_NFSwitchDetails di WITH(NOLOCK) 
          ON b.ItemNumber = di.ItemNumber 
          AND b.CompanyCode = di.CompanyCode 
          AND b.CountryCode = di.CountryCode
      ]]>
    </commandText>
    <parameters>
      <param name="CompanyCode" dbType="Int32"/>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
      <paramGroup name="itemNumbers" dbType="AnsiStringFixedLength" size="25" />
    </parameters>
  </dataCommand>
  <!--additional info  end-->

  <!--sweepstake begin-->
  <dataCommand name="GetSweepstakeByCountry" database="WEBQuery" commandType="Text">
    <commandText>
      <![CDATA[SELECT 
      TOP 1 [SweepstakeName],[Description],[LinkedURL],[ImageURL],[Status],[StartDate],[ExpiredDate]
      FROM ECommerce2005.dbo.EC_NFSweepstakes WITH(NOLOCK) WHERE CountryCode=@CountryCode AND Status ='A' 
      AND (GETDATE() BETWEEN StartDate AND ExpiredDate) ]]>
    </commandText>
    <parameters>
      <param name="CountryCode" dbType="AnsiStringFixedLength" size="3" />
    </parameters>
  </dataCommand>
  <!--sweepstake end-->
</DataCommandsConfig>
