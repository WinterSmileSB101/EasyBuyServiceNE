<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="frameworkTools" type="Newegg.Framework.Tools.Configuration.FrameworkConfiguration, Newegg.Framework.Tools" />
  <section name="dataAccess" type="Newegg.Oversea.DataAccess.Config.DataAccessSection, Newegg.Oversea.DataAccess" /></configSections>
  <frameworkTools>
    <!--
      logProvider: Text / Debug / Other (must implement ILogEmitter)
	  You can set provider to Other, and set emitter="Newegg.FrameworkAPI.SDK.Log.APILogEmitter,Newegg.FrameworkAPI.SDK"
	  to use log api
    -->
    <logSetting logProvider="Text" logFolder="Logs" emitter="" />
  </frameworkTools>
<system.data>
    <DbProviderFactories>
      <remove invariant="MySql.Data.MySqlClient" />
      <add name="MySQL Data Provider" invariant="MySql.Data.MySqlClient" description=".Net Framework Data Provider for MySQL" type="MySql.Data.MySqlClient.MySqlClientFactory, MySql.Data, Version=6.9.9.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d" />
    </DbProviderFactories>
  </system.data><!--
    exceptionLevel: Full, Safety.
      Full: will throw all exception message.
      Safety: remove database info from exception message.

    If your data command files store in multiple folders, you can add config
      configDirectory="Configuration"
    dataAccess will read this folder recursive, auto merge all database files and sql config files.
    If you add configDirectory, dataAccess will ignore "sqlConfigListFile" and "databaseListFile".
  --><dataAccess sqlConfigListFile="Configuration\DbCommandFiles.config" databaseListFile="Configuration\Database.config" exceptionLevel="Safety" /></configuration>